{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { REQUEST_SIGNIN_SUCCESS, REQUEST_SIGNOUT_SUCCESS, REQUEST_SIGNIN_FAILED, REQUEST_SIGNIN_STARTED, RENDER_SIGNIN_COMPONENT } from \"./actionTypes\";\n\nconst requestSuccess = token => {\n  return {\n    type: REQUEST_SIGNIN_SUCCESS,\n    token: token,\n    redirect: '/workouts',\n    loading: false,\n    errors: []\n  };\n};\n\nconst requestStarted = () => {\n  return {\n    loading: true,\n    type: REQUEST_SIGNIN_STARTED,\n    errors: []\n  };\n};\n\nconst requestFailed = err => {\n  let errors = [];\n\n  switch (err.status) {\n    case 400:\n      errors = err.data.errors;\n      break;\n\n    case 500:\n      errors.push({\n        message: err.statusText\n      });\n      errors = errors;\n  }\n\n  return {\n    type: REQUEST_SIGNIN_FAILED,\n    errors: errors,\n    redirect: '/',\n    loading: false\n  };\n};\n\nexport const signin = data => {\n  return dispatch => {\n    dispatch(requestStarted());\n    axios.post('/api/accounts/signin', data).then(res => {\n      if ('token' in res.data) Cookie.set('token', res.data.token);\n      dispatch(requestSuccess(res.data.token));\n    }).catch(err => {\n      dispatch(requestFailed(err.response));\n    });\n  };\n};\nexport const checkSignedIn = () => {\n  return dispatch => {\n    const token = Cookie.get('token');\n\n    if (!token) {\n      signout();\n    } else {\n      dispatch(requestSuccess(token));\n    }\n  };\n};\nexport const showSignin = () => {\n  return dispatch => {\n    dispatch({\n      errors: [],\n      type: RENDER_SIGNIN_COMPONENT\n    });\n  };\n};\nexport const signout = () => {\n  //Cookie.remove('token');\n  console.log(222);\n  return dispatch => {\n    dispatch({\n      type: REQUEST_SIGNOUT_SUCCESS,\n      token: null,\n      signedout: true\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/store/actions/signin.js"],"names":["axios","Cookie","REQUEST_SIGNIN_SUCCESS","REQUEST_SIGNOUT_SUCCESS","REQUEST_SIGNIN_FAILED","REQUEST_SIGNIN_STARTED","RENDER_SIGNIN_COMPONENT","requestSuccess","token","type","redirect","loading","errors","requestStarted","requestFailed","err","status","data","push","message","statusText","signin","dispatch","post","then","res","set","catch","response","checkSignedIn","get","signout","showSignin","console","log","signedout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Cookie from 'js-cookie';\n\nimport { REQUEST_SIGNIN_SUCCESS, REQUEST_SIGNOUT_SUCCESS, REQUEST_SIGNIN_FAILED, REQUEST_SIGNIN_STARTED, RENDER_SIGNIN_COMPONENT } from \"./actionTypes\"\n\nconst requestSuccess = token => {\n    return {\n        type: REQUEST_SIGNIN_SUCCESS,\n        token: token,\n        redirect: '/workouts',\n        loading: false,\n        errors: [],\n    };\n};\n\n\nconst requestStarted = () => {\n    return {\n        loading: true,\n        type: REQUEST_SIGNIN_STARTED,\n        errors: [],\n    }\n}\n\nconst requestFailed = err => {\n    let errors = [];\n    switch( err.status ) {\n        case 400:\n            errors = err.data.errors;\n            break;\n        case 500:\n            errors.push({ message: err.statusText})\n            errors = errors;\n    }\n    return {\n        type: REQUEST_SIGNIN_FAILED,\n        errors: errors,\n        redirect: '/',\n        loading: false\n    };\n}\n\nexport const signin = data => {\n    return dispatch => {\n        dispatch( requestStarted() );\n\n        axios.post('/api/accounts/signin', data)\n        .then( res => {\n            if( 'token' in res.data ) Cookie.set('token', res.data.token);\n            dispatch( requestSuccess( res.data.token ));\n        })\n        .catch( err => {\n            dispatch( requestFailed( err.response ) );\n        })\n    }\n}\n\nexport const checkSignedIn = () => {\n    return dispatch => {\n        const token = Cookie.get('token');\n        if (!token) {\n            signout();\n        } else {\n            dispatch( requestSuccess( token ) );\n        }\n    };\n};\n\nexport const showSignin = () => {\n    return dispatch => {\n        dispatch({\n            errors: [],\n            type: RENDER_SIGNIN_COMPONENT\n        });\n    };\n};\n\nexport const signout = () => {\n    //Cookie.remove('token');\n    console.log(222);\n    return dispatch => {\n        dispatch({\n            type: REQUEST_SIGNOUT_SUCCESS,\n            token: null,\n            signedout: true\n        });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}