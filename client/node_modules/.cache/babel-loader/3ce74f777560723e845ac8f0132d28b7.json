{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport * as actions from '../../../store/actions/index';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged } from '../../../shared/form-utility';\nimport classes from './Signup.module.css';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Aux from '../../../hoc/Aux/Aux';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signupForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSignupHandler = () => {\n      this.props.onSignup(mapKeyToValue(this.state.form));\n\n      if (this.props.errors && this.props.errors.length < 1) {\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: this.props.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }\n\n      ;\n    };\n\n    this.onCancelSignupHandler = () => {\n      this.props.onCancelSignup();\n    };\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => {\n        const error = 'path' in err && err.path.length > 0 && err.path[0] === 'repeat_password' ? 'Password must match!' : err.message;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [error, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 60\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this) : null;\n    let form = formObjectToArray(this.state.form).map(ele => {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" \", ele.settings.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: ele.settings.type,\n          placeholder: ele.settings.config.placeholder,\n          onChange: event => this.inputChangedHandler(event, ele.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    });\n    const signupBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : 'Signup';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Signup,\n      children: [errors, /*#__PURE__*/_jsxDEV(Form, {\n        children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.onSignupHandler,\n            children: signupBtnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            disabled: this.props.loading,\n            onClick: this.onCancelHandler,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null,\n    errors: state.signup.errors,\n    redirect: state.signup.redirect,\n    loading: state.signup.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data)),\n    onCancelSignup: () => dispatch(actions.cancelSignup())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js"],"names":["React","Component","connect","Button","actions","formObjectToArray","mapKeyToValue","signupForm","formInputChanged","classes","Form","Alert","Spinner","Redirect","Aux","Signup","state","form","inputChangedHandler","event","key","setState","onSignupHandler","props","onSignup","errors","length","redirect","onCancelSignupHandler","onCancelSignup","render","map","err","error","path","message","ele","settings","label","type","config","placeholder","signupBtnChild","loading","Buttons","onCancelHandler","mapStateToProps","console","log","isAuth","signin","token","signup","mapDispatchToProps","dispatch","data","cancelSignup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nimport * as actions from '../../../store/actions/index';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged} from '../../../shared/form-utility';\n\nimport classes from './Signup.module.css';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Aux from '../../../hoc/Aux/Aux';\n\nclass Signup extends Component {\n    state = {\n        form: signupForm\n    }\n\n    inputChangedHandler = (event, key) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSignupHandler = ( ) => {\n        this.props.onSignup( mapKeyToValue( this.state.form ) );\n        if ( this.props.errors && this.props.errors.length < 1 ) {\n            <Redirect to={this.props.redirect} />\n        };\n    }\n\n    onCancelSignupHandler = () => {\n        this.props.onCancelSignup();\n    }\n\n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => {\n                        const error = 'path' in err && err.path.length > 0 && err.path[0] === 'repeat_password' ? 'Password must match!':   err.message;\n                        return <span key={ key }>{ error } <br/></span>\n                    })\n                }\n            </Alert>\n        ): null;\n\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            return (\n                <Form.Group controlId={ ele.key } key={ ele.key }>\n                    <Form.Label> { ele.settings.label }</Form.Label>\n                    <Form.Control \n                        type={ ele.settings.type } \n                        placeholder={ ele.settings.config.placeholder }\n                        onChange={ event => this.inputChangedHandler( event, ele.key)}/>\n                </Form.Group>\n            )\n\n        });\n\n        const signupBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        return (\n            <div className={classes.Signup}>\n                { errors }\n                <Form>\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button variant='danger' onClick={this.onSignupHandler}>{ signupBtnChild }</Button>\n                        <Button variant='secondary' disabled={this.props.loading} onClick={this.onCancelHandler}>Cancel</Button>\n                    </div>\n                </Form>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        isAuth: state.signin.token !== null,\n        errors: state.signup.errors,\n        redirect: state.signup.redirect,\n        loading: state.signup.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) ),\n        onCancelSignup: () => dispatch ( actions.cancelSignup () ),\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( Signup );"]},"metadata":{},"sourceType":"module"}