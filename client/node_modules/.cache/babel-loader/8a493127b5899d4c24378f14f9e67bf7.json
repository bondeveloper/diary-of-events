{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner, Col, InputGroup } from 'react-bootstrap';\nimport classes from './Signin.module.css';\nimport { signinForm, formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signinForm,\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = event => {\n      const form = event.currentTarget;\n      console.log(form);\n\n      if (form.checkValidity() == false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.setState({\n        validated: true\n      }); // this.props.onSignin( mapKeyToValue( this.state.form ));\n      // return <Redirect to={ this.props.redirect} />;\n    };\n  }\n\n  componentDidMount() {\n    this.props.onCheckAuth();\n\n    if (this.props.isAuth) {\n      this.props.history.push(this.props.redirect);\n      return;\n    }\n\n    this.props.onSigninShow();\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [err.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 94\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 60\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : null;\n    let form = formObjectToArray(this.state.form).map(ele => {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: ele.settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: ele.settings.config.required,\n          type: ele.settings.config.type,\n          placeholder: ele.settings.config.placeholder,\n          onChange: event => this.inputChangedHandler(event, ele.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \" Field is required. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    });\n    let redirect = this.props.isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 44\n    }, this) : null;\n    const signinBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this) : 'Signup';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Signin,\n      children: [errors, /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        className: classes.Form,\n        onSubmit: this.onSigninHandler,\n        children: [redirect, /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"validationCustom02\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            children: \"Looks good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"4\",\n          controlId: \"validationCustomUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"inputGroupPrepend\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\",\n              \"aria-describedby\": \"inputGroupPrepend\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please choose a username.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: signinBtnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null,\n    redirect: state.signin.redirect,\n    errors: state.signin.errors,\n    loading: state.signin.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data)),\n    onSigninShow: () => dispatch(actions.showSignin()),\n    onCheckAuth: () => dispatch(actions.checkSignedIn())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","Redirect","Form","Alert","Button","Spinner","Col","InputGroup","classes","signinForm","formInputChanged","formObjectToArray","mapKeyToValue","Aux","actions","Signin","state","form","validated","inputChangedHandler","event","key","setState","onSigninHandler","currentTarget","console","log","checkValidity","preventDefault","stopPropagation","componentDidMount","props","onCheckAuth","isAuth","history","push","redirect","onSigninShow","render","errors","length","map","err","message","ele","settings","label","config","required","type","placeholder","signinBtnChild","loading","Buttons","mapStateToProps","signin","token","mapDispatchToProps","dispatch","onSignin","data","showSignin","checkSignedIn"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner, Col, InputGroup } from 'react-bootstrap';\n\nimport classes from './Signin.module.css';\n\nimport { signinForm, formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n    state = {\n        form: signinForm,\n        validated: false\n    }\n\n    componentDidMount () {\n        this.props.onCheckAuth();\n        if ( this.props.isAuth ) {\n            this.props.history.push(this.props.redirect);\n            return;\n        }\n        this.props.onSigninShow();\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSigninHandler = event => {\n        const form = event.currentTarget;\n        console.log(form);\n\n        if ( form.checkValidity() == false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({ validated: true });\n        // this.props.onSignin( mapKeyToValue( this.state.form ));\n        // return <Redirect to={ this.props.redirect} />;\n    }\n\n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => <span key={ key }>{ err.message } <br/></span>)\n                }\n            </Alert>\n        ): null;\n\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            return (\n                <Form.Group as={Col} controlId={ele.key} key={ele.key}>\n                    <Form.Label>{ ele.settings.label }</Form.Label>\n                    <Form.Control\n                        required={ ele.settings.config.required }\n                        type={ ele.settings.config.type }\n                        placeholder={ ele.settings.config.placeholder}\n                        onChange={ event => this.inputChangedHandler( event, ele.key)}/>\n                    <Form.Control.Feedback type=\"invalid\"> Field is required. </Form.Control.Feedback>\n                </Form.Group>\n            );\n\n        });\n\n        let redirect = this.props.isAuth ? <Redirect to={this.props.redirect} /> : null;\n\n        const signinBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        return (\n            <div className={classes.Signin}>\n                {errors}\n                <Form noValidate validated={this.state.validated} className={classes.Form} onSubmit={this.onSigninHandler}>\n                    {redirect}\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n                      <Form.Label>Last name</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Last name\"\n                      />\n                      <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n                      <Form.Label>Username</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Username\"\n                          aria-describedby=\"inputGroupPrepend\"\n                          required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please choose a username.\n                        </Form.Control.Feedback>\n                      </InputGroup>\n                    </Form.Group>\n                    <div className={classes.Buttons}>\n                        <Button variant='danger' type=\"submit\">{ signinBtnChild }</Button>\n                        {/* <Button variant='secondary' disabled={this.props.loading}>Cancel</Button> */}\n                    </div>\n                </Form>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    console.log( state );\n    return {\n        isAuth: state.signin.token !== null,\n        redirect: state.signin.redirect,\n        errors: state.signin.errors,\n        loading: state.signin.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) ),\n        onSigninShow: () => dispatch( actions.showSignin() ),\n        onCheckAuth: () => dispatch( actions.checkSignedIn() )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );\n"]},"metadata":{},"sourceType":"module"}