{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickedHandler = (key, values) => {\n      console.log(222);\n      console.log(key);\n      console.log(values);\n      this.props.viewClicked(key);\n    };\n\n    this.renderTableData = (data, key) => {\n      console.log(data);\n      return [...data].map(values => {\n        let pk = values[key];\n        console.log(values);\n        console.log(pk);\n        const tableData = Object.keys(excludeKeyFromObj({ ...values\n        }, key)).map(id => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: values[id]\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableData, /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              onClick: () => this.onClickedHandler(key, pk),\n              children: \"view\"\n            }, pk, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, 'action' + key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, key + values[key], true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.renderTableColumnNames = (data, key) => {\n      console.log(data);\n      let dataCopy = [...data];\n      return dataCopy.slice(0, 1).map(values => {\n        const tableColumnNames = Object.keys(excludeKeyFromObj(values, key)).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: transformUnderscoreCaseToSentenceCase(key)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableColumnNames, /*#__PURE__*/_jsxDEV(\"th\", {}, 'action' + values[key], false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, key + values[key], true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    const table = this.props.data && this.props.data.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderTableData(this.props.data, this.props.keyValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Nothing to display!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Table,\n      children: [this.props.tableHeader, table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js"],"names":["React","Component","Table","Button","transformUnderscoreCaseToSentenceCase","excludeKeyFromObj","classes","CustomTable","onClickedHandler","key","values","console","log","props","viewClicked","renderTableData","data","map","pk","tableData","Object","keys","id","renderTableColumnNames","dataCopy","slice","tableColumnNames","render","table","length","keyValue","tableHeader"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\n\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n\n    onClickedHandler = (key,values ) => {\n        console.log(222);\n        console.log(key);\n        console.log(values);\n        this.props.viewClicked( key );\n    }\n\n    renderTableData = (data, key) => {\n        console.log(data);\n        return [...data].map( values => {\n            let pk = values[key];\n            console.log(values);\n            console.log(pk);\n\n            const tableData = Object.keys( excludeKeyFromObj( {...values}, key ) ).map( id => {\n                return (\n                    <td key={id}>{ values[id] }</td>\n                )\n            });\n            return (\n                <tr key={ key + values[key] }>\n                    {tableData}\n                    <td key={'action' + key}>\n                        <Button variant='link' key={pk} onClick={ () => this.onClickedHandler( key, pk ) }>view</Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n    \n    renderTableColumnNames = (data, key) => {\n        console.log(data);\n        let dataCopy = [...data];\n        return dataCopy.slice(0,1).map( values => {\n            const tableColumnNames = Object.keys( excludeKeyFromObj( values, key ) ).map( key => {\n                return (\n                    <th key={key}>{ transformUnderscoreCaseToSentenceCase( key ) }</th>\n                    )\n                });\n            return (\n                <tr key={ key + values[key] }>\n                    {tableColumnNames}\n                    <th key={'action' + values[key]}></th>\n                </tr>\n            );\n        });\n    }\n\n    render () {\n             \n        const table = this.props.data && this.props.data.length > 0 ? (\n            <Table striped bordered hover responsive=\"sm\">\n                <thead>\n                    {/* {this.renderTableColumnNames(this.props.data, this.props.keyValue)} */}\n                </thead>\n                <tbody>\n                    {this.renderTableData(this.props.data, this.props.keyValue)}\n                </tbody>\n            </Table>\n        ) : <span>Nothing to display!</span>\n\n        return (\n            <div className={classes.Table}>\n                {this.props.tableHeader}\n                {table}\n            </div>\n        );\n    }\n}\n\n\nexport default CustomTable;"]},"metadata":{},"sourceType":"module"}