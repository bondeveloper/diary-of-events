{"ast":null,"code":"import axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { REQUEST_SIGNUP_SUCCESS, RENDER_SIGNUP_COMPONENT, REQUEST_FAILED, REQUEST_STARTED, REQUEST_SIGNUP_CANCEL } from './actionTypes';\nexport const requestSuccess = data => {\n  return {\n    account: data.data,\n    type: REQUEST_SIGNUP_SUCCESS,\n    loading: false,\n    hide: true,\n    redirect: data.redirect,\n    toast: data.toast,\n    errors: [],\n    loading: false\n  };\n};\n\nconst requestStarted = () => {\n  return {\n    loading: true,\n    type: REQUEST_SIGNUP_STARTED,\n    errors: []\n  };\n};\n\nconst requestFailed = err => {\n  let errors = [];\n\n  switch (err.status) {\n    case 400:\n      errors = err.data.errors;\n      break;\n\n    case 500:\n      errors.push({\n        message: err.statusText\n      });\n      errors = errors;\n  }\n\n  return {\n    type: REQUEST_FAILED,\n    errors: errors,\n    redirect: '/',\n    loading: false\n  };\n};\n\nexport const signup = data => {\n  return dispatch => {\n    dispatch(requestStarted());\n    axios.post('/api/accounts/signup', data).then(res => {\n      Cookie.set('account', res.data.account);\n      dispatch(requestSuccess({\n        data: res.data.account,\n        toast: 'Account created successfully. Login to access account',\n        redirect: '/'\n      }));\n    }).catch(err => {\n      dispatch(requestFailed(err.response));\n    });\n  };\n};\nexport const signupCancel = () => {\n  return dispatch => {\n    dispatch({\n      type: REQUEST_SIGNUP_CANCEL,\n      hide: true,\n      errors: []\n    });\n  };\n};\nexport const showSignup = currentState => {\n  return dispatch => {\n    dispatch({\n      type: RENDER_SIGNUP_COMPONENT,\n      hide: !currentState,\n      errors: []\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/store/actions/signup.js"],"names":["axios","Cookie","REQUEST_SIGNUP_SUCCESS","RENDER_SIGNUP_COMPONENT","REQUEST_FAILED","REQUEST_STARTED","REQUEST_SIGNUP_CANCEL","requestSuccess","data","account","type","loading","hide","redirect","toast","errors","requestStarted","REQUEST_SIGNUP_STARTED","requestFailed","err","status","push","message","statusText","signup","dispatch","post","then","res","set","catch","response","signupCancel","showSignup","currentState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,sBAAT,EAAiCC,uBAAjC,EAA0DC,cAA1D,EAA0EC,eAA1E,EAA2FC,qBAA3F,QAAuH,eAAvH;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAClC,SAAO;AACHC,IAAAA,OAAO,EAAED,IAAI,CAACA,IADX;AAEHE,IAAAA,IAAI,EAAER,sBAFH;AAGHS,IAAAA,OAAO,EAAE,KAHN;AAIHC,IAAAA,IAAI,EAAE,IAJH;AAKHC,IAAAA,QAAQ,EAAEL,IAAI,CAACK,QALZ;AAMHC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KANT;AAOHC,IAAAA,MAAM,EAAE,EAPL;AAQHJ,IAAAA,OAAO,EAAE;AARN,GAAP;AAUH,CAXM;;AAaP,MAAMK,cAAc,GAAG,MAAM;AACzB,SAAO;AACHL,IAAAA,OAAO,EAAE,IADN;AAEHD,IAAAA,IAAI,EAAEO,sBAFH;AAGHF,IAAAA,MAAM,EAAE;AAHL,GAAP;AAKH,CAND;;AAQA,MAAMG,aAAa,GAAGC,GAAG,IAAI;AACzB,MAAIJ,MAAM,GAAG,EAAb;;AACA,UAAQI,GAAG,CAACC,MAAZ;AACI,SAAK,GAAL;AACIL,MAAAA,MAAM,GAAGI,GAAG,CAACX,IAAJ,CAASO,MAAlB;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,MAAM,CAACM,IAAP,CAAY;AAAEC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAf,OAAZ;AACAR,MAAAA,MAAM,GAAGA,MAAT;AANR;;AAQA,SAAO;AACHL,IAAAA,IAAI,EAAEN,cADH;AAEHW,IAAAA,MAAM,EAAEA,MAFL;AAGHF,IAAAA,QAAQ,EAAE,GAHP;AAIHF,IAAAA,OAAO,EAAE;AAJN,GAAP;AAMH,CAhBD;;AAkBA,OAAO,MAAMa,MAAM,GAAGhB,IAAI,IAAI;AAE1B,SAAOiB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAET,cAAc,EAAhB,CAAR;AAEAhB,IAAAA,KAAK,CAAC0B,IAAN,CAAW,sBAAX,EAAmClB,IAAnC,EACCmB,IADD,CACOC,GAAG,IAAI;AACV3B,MAAAA,MAAM,CAAC4B,GAAP,CAAW,SAAX,EAAsBD,GAAG,CAACpB,IAAJ,CAASC,OAA/B;AACAgB,MAAAA,QAAQ,CAAElB,cAAc,CAAC;AACrBC,QAAAA,IAAI,EAAEoB,GAAG,CAACpB,IAAJ,CAASC,OADM;AAErBK,QAAAA,KAAK,EAAE,uDAFc;AAGrBD,QAAAA,QAAQ,EAAE;AAHW,OAAD,CAAhB,CAAR;AAKH,KARD,EASCiB,KATD,CASQX,GAAG,IAAI;AACXM,MAAAA,QAAQ,CAAEP,aAAa,CAAEC,GAAG,CAACY,QAAN,CAAf,CAAR;AACH,KAXD;AAYH,GAfD;AAgBH,CAlBM;AAoBP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAOP,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLf,MAAAA,IAAI,EAAEJ,qBADD;AAELM,MAAAA,IAAI,EAAE,IAFD;AAGLG,MAAAA,MAAM,EAAE;AAHH,KAAD,CAAR;AAKH,GAND;AAOH,CARM;AAUP,OAAO,MAAMkB,UAAU,GAAGC,YAAY,IAAI;AACtC,SAAOT,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AACLf,MAAAA,IAAI,EAAEP,uBADD;AAELS,MAAAA,IAAI,EAAE,CAACsB,YAFF;AAGLnB,MAAAA,MAAM,EAAE;AAHH,KAAD,CAAR;AAKH,GAND;AAOH,CARM","sourcesContent":["import axios from \"axios\";\nimport Cookie from 'js-cookie';\n\nimport { REQUEST_SIGNUP_SUCCESS, RENDER_SIGNUP_COMPONENT, REQUEST_FAILED, REQUEST_STARTED, REQUEST_SIGNUP_CANCEL} from './actionTypes';\n\nexport const requestSuccess = data => {\n    return {\n        account: data.data,\n        type: REQUEST_SIGNUP_SUCCESS,\n        loading: false,\n        hide: true,\n        redirect: data.redirect,\n        toast: data.toast,\n        errors: [],\n        loading: false\n    };\n};\n\nconst requestStarted = () => {\n    return {\n        loading: true,\n        type: REQUEST_SIGNUP_STARTED,\n        errors: [],\n    }\n}\n\nconst requestFailed = err => {\n    let errors = [];\n    switch( err.status ) {\n        case 400:\n            errors = err.data.errors;\n            break;\n        case 500:\n            errors.push({ message: err.statusText})\n            errors = errors;\n    }\n    return {\n        type: REQUEST_FAILED,\n        errors: errors,\n        redirect: '/',\n        loading: false\n    };\n}\n\nexport const signup = data => {\n\n    return dispatch => {\n        dispatch( requestStarted() );\n\n        axios.post('/api/accounts/signup', data)\n        .then( res => {\n            Cookie.set('account', res.data.account);\n            dispatch( requestSuccess({ \n                data: res.data.account,\n                toast: 'Account created successfully. Login to access account',\n                redirect: '/'\n            }) );\n        })\n        .catch( err => {\n            dispatch( requestFailed( err.response ) );\n        });\n    };\n};\n\nexport const signupCancel = () => {\n    return dispatch => {\n        dispatch({\n            type: REQUEST_SIGNUP_CANCEL,\n            hide: true,\n            errors: [],\n        });\n    };\n};\n\nexport const showSignup = currentState => {\n    return dispatch => {\n        dispatch({\n            type: RENDER_SIGNUP_COMPONENT,\n            hide: !currentState,\n            errors: [],\n        });\n    };\n};"]},"metadata":{},"sourceType":"module"}