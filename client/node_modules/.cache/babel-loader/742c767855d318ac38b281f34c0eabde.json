{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner } from 'react-bootstrap';\nimport classes from './Signin.module.css';\nimport { signinForm, formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signinForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = () => {\n      this.props.onSignin(mapKeyToValue(this.state.form)); // console.log(this.props.)\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onCheckAuth();\n\n    if (this.props.isAuth) {\n      this.props.history.push(this.props.redirect);\n    }\n\n    this.props.onSigninShow();\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [err.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 94\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 60\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this) : null;\n    let form = formObjectToArray(this.state.form).map(ele => {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: ele.settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: ele.settings.config.type,\n          placeholder: ele.settings.config.placeholder,\n          onChange: event => this.inputChangedHandler(event, ele.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    });\n    let redirect = this.props.isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 44\n    }, this) : null;\n    const signinBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : 'Signup';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Signin,\n      children: [errors, /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.Form,\n        children: [redirect, form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.onSigninHandler,\n            children: signinBtnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null,\n    redirect: state.signin.redirect,\n    errors: state.signin.errors,\n    loading: state.signin.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data)),\n    onSigninShow: () => dispatch(actions.showSignin()),\n    onCheckAuth: () => dispatch(actions.checkSignedIn())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","Redirect","Form","Alert","Button","Spinner","classes","signinForm","formInputChanged","formObjectToArray","mapKeyToValue","Aux","actions","Signin","state","form","inputChangedHandler","event","key","setState","onSigninHandler","props","onSignin","redirect","componentDidMount","onCheckAuth","isAuth","history","push","onSigninShow","render","errors","length","map","err","message","ele","settings","label","config","type","placeholder","signinBtnChild","loading","Buttons","mapStateToProps","console","log","signin","token","mapDispatchToProps","dispatch","data","showSignin","checkSignedIn"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA6C,iBAA7C;AAGA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA4C,8BAA5C;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,yBAAjD;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;;AAEA,MAAMC,MAAN,SAAqBb,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3Bc,KAD2B,GACnB;AACJC,MAAAA,IAAI,EAAER;AADF,KADmB;;AAAA,SAa3BS,mBAb2B,GAaL,CAAEC,KAAF,EAASC,GAAT,KAAkB;AACpC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEP,gBAAgB,CAAE,KAAKM,KAAL,CAAWC,IAAb,EAAmBE,KAAnB,EAA0BC,GAA1B;AAAxB,OAAd;AACH,KAf0B;;AAAA,SAiB3BE,eAjB2B,GAiBT,MAAM;AACpB,WAAKC,KAAL,CAAWC,QAAX,CAAqBZ,aAAa,CAAE,KAAKI,KAAL,CAAWC,IAAb,CAAlC,EADoB,CAEpB;;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,KAAKM,KAAL,CAAWE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KArB0B;AAAA;;AAK3BC,EAAAA,iBAAiB,GAAI;AACjB,SAAKH,KAAL,CAAWI,WAAX;;AACA,QAAK,KAAKJ,KAAL,CAAWK,MAAhB,EAAyB;AACrB,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,KAAKP,KAAL,CAAWE,QAAnC;AACH;;AACD,SAAKF,KAAL,CAAWQ,YAAX;AACH;;AAYDC,EAAAA,MAAM,GAAI;AACN,UAAMC,MAAM,GAAG,KAAKV,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWU,MAAX,CAAkBC,MAAlB,GAA2B,CAAhD,gBACX,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA,gBAEQ,KAAKX,KAAL,CAAWU,MAAX,CAAkBE,GAAlB,CAAuB,CAAEC,GAAF,EAAOhB,GAAP,kBAAgB;AAAA,mBAAoBgB,GAAG,CAACC,OAAxB,oBAAkC;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA,SAAYjB,GAAZ;AAAA;AAAA;AAAA;AAAA,cAAvC;AAFR;AAAA;AAAA;AAAA;AAAA,YADW,GAMZ,IANH;AAQA,QAAIH,IAAI,GAAGN,iBAAiB,CAAE,KAAKK,KAAL,CAAWC,IAAb,CAAjB,CAAqCkB,GAArC,CAA0CG,GAAG,IAAI;AACxD,0BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAEA,GAAG,CAAClB,GAA3B;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAckB,GAAG,CAACC,QAAJ,CAAaC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAGF,GAAG,CAACC,QAAJ,CAAaE,MAAb,CAAoBC,IAD/B;AAEI,UAAA,WAAW,EAAGJ,GAAG,CAACC,QAAJ,CAAaE,MAAb,CAAoBE,WAFtC;AAGI,UAAA,QAAQ,EAAGxB,KAAK,IAAI,KAAKD,mBAAL,CAA0BC,KAA1B,EAAiCmB,GAAG,CAAClB,GAArC;AAHxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAqCkB,GAAG,CAAClB,GAAzC;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXU,CAAX;AAaA,QAAIK,QAAQ,GAAG,KAAKF,KAAL,CAAWK,MAAX,gBAAoB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKL,KAAL,CAAWE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAApB,GAA4D,IAA3E;AAEA,UAAMmB,cAAc,GAAG,KAAKrB,KAAL,CAAWsB,OAAX,gBACnB,QAAC,GAAD;AAAA,8BACI,QAAC,OAAD;AACA,QAAA,EAAE,EAAC,MADH;AAEA,QAAA,SAAS,EAAC,MAFV;AAGA,QAAA,IAAI,EAAC,IAHL;AAIA,QAAA,IAAI,EAAC,QAJL;AAKA,uBAAY;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADmB,GAWpB,QAXH;AAaA,wBACI;AAAK,MAAA,SAAS,EAAErC,OAAO,CAACO,MAAxB;AAAA,iBACKkB,MADL,eAEI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEzB,OAAO,CAACJ,IAAzB;AAAA,mBACKqB,QADL,EAEKR,IAFL,eAGI;AAAK,UAAA,SAAS,EAAET,OAAO,CAACsC,OAAxB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAE,KAAKxB,eAAvC;AAAA,sBAA0DsB;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAzE0B;;AA0E9B;;AAED,MAAMG,eAAe,GAAG/B,KAAK,IAAI;AAC7BgC,EAAAA,OAAO,CAACC,GAAR,CAAajC,KAAb;AACA,SAAO;AACHY,IAAAA,MAAM,EAAEZ,KAAK,CAACkC,MAAN,CAAaC,KAAb,KAAuB,IAD5B;AAEH1B,IAAAA,QAAQ,EAAET,KAAK,CAACkC,MAAN,CAAazB,QAFpB;AAGHQ,IAAAA,MAAM,EAAEjB,KAAK,CAACkC,MAAN,CAAajB,MAHlB;AAIHY,IAAAA,OAAO,EAAE7B,KAAK,CAACkC,MAAN,CAAaL;AAJnB,GAAP;AAMH,CARD;;AAUA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH7B,IAAAA,QAAQ,EAAG8B,IAAI,IAAID,QAAQ,CAAEvC,OAAO,CAACoC,MAAR,CAAiBI,IAAjB,CAAF,CADxB;AAEHvB,IAAAA,YAAY,EAAE,MAAMsB,QAAQ,CAAEvC,OAAO,CAACyC,UAAR,EAAF,CAFzB;AAGH5B,IAAAA,WAAW,EAAE,MAAM0B,QAAQ,CAAEvC,OAAO,CAAC0C,aAAR,EAAF;AAHxB,GAAP;AAKH,CAND;;AAQA,eAAexD,OAAO,CAAE+C,eAAF,EAAmBK,kBAAnB,CAAP,CAAgDrC,MAAhD,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner } from 'react-bootstrap';\n\n\nimport classes from './Signin.module.css';\n\nimport { signinForm, formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n    state = {\n        form: signinForm\n    }\n\n    componentDidMount () {\n        this.props.onCheckAuth();\n        if ( this.props.isAuth ) {\n            this.props.history.push(this.props.redirect);\n        }\n        this.props.onSigninShow();\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSigninHandler = () => {\n        this.props.onSignin( mapKeyToValue( this.state.form ));\n        // console.log(this.props.)\n        return <Redirect to={ this.props.redirect} />;\n    }\n\n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => <span key={ key }>{ err.message } <br/></span>)\n                }\n            </Alert>\n        ): null;\n        \n        let form = formObjectToArray( this.state.form ).map( ele => {\n            return (\n                <Form.Group controlId={ele.key} key={ele.key}>\n                    <Form.Label>{ ele.settings.label }</Form.Label>\n                    <Form.Control\n                        type={ ele.settings.config.type } \n                        placeholder={ ele.settings.config.placeholder} \n                        onChange={ event => this.inputChangedHandler( event, ele.key)}/>\n                </Form.Group>\n            );\n\n        });\n\n        let redirect = this.props.isAuth ? <Redirect to={this.props.redirect} /> : null;\n\n        const signinBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        return (\n            <div className={classes.Signin}>\n                {errors}\n                <Form className={classes.Form}>          \n                    {redirect}\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button variant='danger' onClick={this.onSigninHandler}>{ signinBtnChild }</Button>\n                        {/* <Button variant='secondary' disabled={this.props.loading}>Cancel</Button> */}\n                    </div>\n                </Form>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    console.log( state );\n    return {\n        isAuth: state.signin.token !== null,\n        redirect: state.signin.redirect,\n        errors: state.signin.errors,\n        loading: state.signin.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) ),\n        onSigninShow: () => dispatch( actions.showSignin() ),\n        onCheckAuth: () => dispatch( actions.checkSignedIn() )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );"]},"metadata":{},"sourceType":"module"}