{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner, Col, InputGroup } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport classes from './Signin.module.css';\nimport { formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = form => {\n      this.setState({\n        validated: true\n      });\n      this.props.onSignin(form);\n      console.log(this.props.redirect);\n      this.props.history.push(this.props.redirect);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    // this.props.onCheckAuth();\n    // console.log(this.props.isAuth);\n    // if ( this.props.isAuth ) {\n    //     this.props.history.push(this.props.redirect);\n    //     return  <Redirect to={ this.props.redirect} />;\n    // }\n    this.props.onSigninShow();\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [err.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 94\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 60\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : null; // let redirect = this.props.isAuth ? <Redirect to='/workouts' /> : null;\n\n    const signinBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : 'Signup';\n    const schema = yup.object({\n      email: yup.string().required().email(),\n      password: yup.string().required()\n    });\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: this.onSigninHandler,\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Email\",\n            name: \"email\",\n            value: values.email,\n            onChange: handleChange,\n            isInvalid: !!errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            isInvalid: !!errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: signinBtnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null,\n    redirect: state.signin.redirect,\n    errors: state.signin.errors,\n    loading: state.signin.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data)),\n    onSigninShow: () => dispatch(actions.showSignin()),\n    onCheckAuth: () => dispatch(actions.checkSignedIn())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","Redirect","Form","Alert","Button","Spinner","Col","InputGroup","Formik","yup","classes","formInputChanged","formObjectToArray","mapKeyToValue","Aux","actions","Signin","state","validated","inputChangedHandler","event","key","setState","form","onSigninHandler","props","onSignin","console","log","redirect","history","push","componentDidMount","onSigninShow","render","errors","length","map","err","message","signinBtnChild","loading","schema","object","email","string","required","password","handleSubmit","handleChange","handleBlur","values","touched","isValid","Buttons","mapStateToProps","isAuth","signin","token","mapDispatchToProps","dispatch","data","showSignin","onCheckAuth","checkSignedIn"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner, Col, InputGroup } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport classes from './Signin.module.css';\n\nimport { formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n    state = {\n        validated: false\n    }\n\n    componentDidMount () {\n        // this.props.onCheckAuth();\n        // console.log(this.props.isAuth);\n        // if ( this.props.isAuth ) {\n        //     this.props.history.push(this.props.redirect);\n        //     return  <Redirect to={ this.props.redirect} />;\n        // }\n        this.props.onSigninShow();\n    }\n\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSigninHandler = form => {\n        this.setState({ validated: true });\n        this.props.onSignin( form );\n\n        console.log( this.props.redirect );\n        this.props.history.push( this.props.redirect );\n        return <Redirect to={ this.props.redirect} />;\n    }\n\n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => <span key={ key }>{ err.message } <br/></span>)\n                }\n            </Alert>\n        ): null;\n\n        // let redirect = this.props.isAuth ? <Redirect to='/workouts' /> : null;\n\n        const signinBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        const schema = yup.object({\n            email: yup.string().required().email(),\n            password: yup.string().required(),\n        });\n\n        return (\n        <Formik\n            validationSchema={schema}\n            onSubmit={this.onSigninHandler}\n            initialValues={{\n                email: '',\n                password: ''\n            }}\n        >\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n        }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group as={Col} controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isInvalid={!!errors.email}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    isInvalid={!!errors.password}\n                />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.password}\n                  </Form.Control.Feedback>\n            </Form.Group>\n            <div className={classes.Buttons}>\n                <Button variant='danger' type=\"submit\">{ signinBtnChild }</Button>\n                {/* <Button variant='secondary' disabled={this.props.loading}>Cancel</Button> */}\n            </div>\n        </Form>\n      )}\n    </Formik>);\n    };\n};\n\nconst mapStateToProps = state => {\n    console.log( state );\n    return {\n        isAuth: state.signin.token !== null,\n        redirect: state.signin.redirect,\n        errors: state.signin.errors,\n        loading: state.signin.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) ),\n        onSigninShow: () => dispatch( actions.showSignin() ),\n        onCheckAuth: () => dispatch( actions.checkSignedIn() )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );\n"]},"metadata":{},"sourceType":"module"}