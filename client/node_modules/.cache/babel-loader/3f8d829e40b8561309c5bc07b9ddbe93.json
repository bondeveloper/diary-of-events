{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport classes from './Signin.module.css';\nimport { signinForm, formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signinForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = event => {\n      event.preventDefault();\n      this.props.onSignin(mapKeyToValue(this.state.form));\n    };\n  }\n\n  render() {\n    let form = formObjectToArray().map(ele => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: ele.settings.type,\n        config: ele.settings.config,\n        value: ele.settings.value,\n        label: ele.settings.label,\n        changed: event => this.inputChangedHandler(event, ele.key)\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"Success\",\n            clicked: this.onSigninHandler,\n            children: \"Signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"Cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","classes","signinForm","formInputChanged","formObjectToArray","mapKeyToValue","Input","Button","Signin","state","form","inputChangedHandler","event","key","setState","onSigninHandler","preventDefault","props","onSignin","render","map","ele","settings","type","config","value","label","Buttons","mapStateToProps","isAuth","signin","token","mapDispatchToProps","dispatch","data","actions"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,QAA4C,8BAA5C;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,yBAAjD;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BS,KAD2B,GACnB;AACJC,MAAAA,IAAI,EAAER;AADF,KADmB;;AAAA,SAI3BS,mBAJ2B,GAIL,CAAEC,KAAF,EAASC,GAAT,KAAkB;AACpC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEP,gBAAgB,CAAE,KAAKM,KAAL,CAAWC,IAAb,EAAmBE,KAAnB,EAA0BC,GAA1B;AAAxB,OAAd;AACH,KAN0B;;AAAA,SAO3BE,eAP2B,GAOPH,KAAF,IAAa;AAC3BA,MAAAA,KAAK,CAACI,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAqBb,aAAa,CAAE,KAAKI,KAAL,CAAWC,IAAb,CAAlC;AACH,KAV0B;AAAA;;AAW3BS,EAAAA,MAAM,GAAI;AACN,QAAIT,IAAI,GAAGN,iBAAiB,GAAGgB,GAApB,CAAyBC,GAAG,IAAI;AACvC,0BAAO,QAAC,KAAD;AAEH,QAAA,IAAI,EAAEA,GAAG,CAACC,QAAJ,CAAaC,IAFhB;AAGH,QAAA,MAAM,EAAEF,GAAG,CAACC,QAAJ,CAAaE,MAHlB;AAIH,QAAA,KAAK,EAAEH,GAAG,CAACC,QAAJ,CAAaG,KAJjB;AAKH,QAAA,KAAK,EAAEJ,GAAG,CAACC,QAAJ,CAAaI,KALjB;AAMH,QAAA,OAAO,EAAGd,KAAK,IAAI,KAAKD,mBAAL,CAA0BC,KAA1B,EAAiCS,GAAG,CAACR,GAArC;AANhB,SACEQ,GAAG,CAACR,GADN;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH,KATU,CAAX;AAWA,wBACI;AAAA,6BACI;AAAA,mBACKH,IADL,eAEI;AAAK,UAAA,SAAS,EAAET,OAAO,CAAC0B,OAAxB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,OAAO,EAAE,KAAKZ,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAlC0B;;AAmC9B;;AAED,MAAMa,eAAe,GAAGnB,KAAK,IAAI;AAC7B,SAAO;AACHoB,IAAAA,MAAM,EAAEpB,KAAK,CAACqB,MAAN,CAAaC,KAAb,KAAuB;AAD5B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,QAAQ,EAAGgB,IAAI,IAAID,QAAQ,CAAEE,OAAO,CAACL,MAAR,CAAiBI,IAAjB,CAAF;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAepC,OAAO,CAAE8B,eAAF,EAAmBI,kBAAnB,CAAP,CAAgDxB,MAAhD,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport classes from './Signin.module.css';\n\nimport { signinForm, formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nclass Signin extends Component {\n    state = {\n        form: signinForm\n    }\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n    onSigninHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onSignin( mapKeyToValue( this.state.form ));\n    }\n    render () {\n        let form = formObjectToArray().map( ele => {\n            return <Input\n                key={ele.key}\n                type={ele.settings.type}\n                config={ele.settings.config}\n                value={ele.settings.value}\n                label={ele.settings.label}\n                changed={ event => this.inputChangedHandler( event, ele.key)}\n                />\n        })\n\n        return (\n            <div>\n                <form>\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button type='Success' clicked={this.onSigninHandler}>Signin</Button>\n                        <Button type='Cancel'>Cancel</Button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );"]},"metadata":{},"sourceType":"module"}