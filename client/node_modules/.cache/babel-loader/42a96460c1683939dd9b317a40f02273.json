{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/App.js\";\nimport { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport Layout from './hoc/Layout/Layout';\nimport Home from './containers/pages/Home/Home';\nimport Workouts from './components/pages/Workouts/Workouts';\n\nclass App extends Component {\n  render() {\n    let routes = /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n\n    if (this.props.isAuth) {\n      routes = /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/workouts\",\n          component: Workouts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCheckAuth: () => dispatch(actions.checkSignedIn())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/App.js"],"names":["Component","Route","Switch","withRouter","Redirect","connect","actions","Layout","Home","Workouts","App","render","routes","props","isAuth","mapStateToProps","state","signin","token","mapDispatchToProps","dispatch","onCheckAuth","checkSignedIn"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,kBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,QAAP,MAAqB,sCAArB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,MAAM,GAAI;AACR,QAAIC,MAAM,gBACN,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAiB,QAAA,SAAS,EAAEJ;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;;AAKA,QAAK,KAAKK,KAAL,CAAWC,MAAhB,EAAyB;AACvBF,MAAAA,MAAM,gBACJ,QAAC,MAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,WAAb;AAAyB,UAAA,SAAS,EAAEH;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,wBACE,QAAC,MAAD;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApByB;;AAuB5B,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,MAAM,EAAEE,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB;AAD1B,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,WAAW,EAAE,MAAMD,QAAQ,CAAEd,OAAO,CAACgB,aAAR,EAAF;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAenB,UAAU,CAACE,OAAO,CAACU,eAAD,EAAkBI,kBAAlB,CAAP,CAA8CT,GAA9C,CAAD,CAAzB","sourcesContent":["import { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from './store/actions/index';\n\nimport Layout from './hoc/Layout/Layout';\nimport Home from './containers/pages/Home/Home';\nimport Workouts from './components/pages/Workouts/Workouts';\n\nclass App extends Component {\n  render () {\n    let routes = (\n        <Switch>\n          <Redirect to='/' component={Home} />\n        </Switch>\n    );\n    if ( this.props.isAuth ) {\n      routes = (\n        <Switch>\n          <Redirect to='/workouts' component={Workouts} />\n        </Switch>\n      );\n    }\n    \n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCheckAuth: () => dispatch( actions.checkSignedIn() )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)( App ));\n"]},"metadata":{},"sourceType":"module"}