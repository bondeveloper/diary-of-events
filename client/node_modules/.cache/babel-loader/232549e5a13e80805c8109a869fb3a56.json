{"ast":null,"code":"import { updateObject } from './utility';\nconst email = {\n  type: 'input',\n  config: {\n    type: 'email',\n    placeholder: 'email'\n  },\n  value: '',\n  label: 'Email'\n};\nconst password = {\n  type: 'input',\n  config: {\n    type: 'password',\n    placeholder: 'password'\n  },\n  value: '',\n  label: 'Password'\n};\nconst repeat_password = {\n  type: 'input',\n  config: {\n    type: 'password',\n    placeholder: 'confirm password'\n  },\n  value: '',\n  label: 'Confirm Password'\n};\nconst weight = {\n  type: 'input',\n  config: {\n    type: 'number',\n    placeholder: 'weight'\n  }\n};\nconst weightUnit = {\n  type: 'select',\n  config: {\n    type: 'select',\n    options: {\n      lbs: 'lbs',\n      kg: 'kg'\n    }\n  }\n};\n\nconst measure = placeholder => {\n  return {\n    type: 'input',\n    config: {\n      type: 'number',\n      placeholder: placeholder\n    }\n  };\n};\n\nconst unit = options => {\n  return {\n    type: 'select',\n    config: {\n      type: 'select',\n      options: options\n    }\n  };\n};\n\nconst heaviness = {\n  lbs: 'lbs',\n  kg: 'kg'\n};\nconst thickness = {\n  lbs: 'cm',\n  kg: 'inch'\n};\nexport const signinForm = {\n  weight: {\n    value: measure('weight'),\n    unit: unit(heaviness)\n  },\n  waist: {\n    value: measure('waist'),\n    unit: unit(thickness)\n  }\n};\nexport const signupForm = {\n  email: email,\n  password: password,\n  repeat_password: repeat_password\n};\nexport const workoutSessionForm = {};\nexport const formInputChanged = (form, event, key) => {\n  const updatedFormElement = updateObject(form[key], {\n    value: event.target.value\n  });\n  return updateObject(form, {\n    [key]: updatedFormElement\n  });\n};","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/shared/form-utility.js"],"names":["updateObject","email","type","config","placeholder","value","label","password","repeat_password","weight","weightUnit","options","lbs","kg","measure","unit","heaviness","thickness","signinForm","waist","signupForm","workoutSessionForm","formInputChanged","form","event","key","updatedFormElement","target"],"mappings":"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","sourcesContent":["import { updateObject } from './utility';\n\nconst email = {\n    type: 'input',\n        config: {\n            type: 'email',\n            placeholder: 'email'\n        },\n        value: '',\n        label: 'Email'\n};\n\nconst  password = {\n    type: 'input',\n    config: {\n        type: 'password',\n        placeholder: 'password'\n    },\n    value: '',\n    label: 'Password'\n};\n\nconst  repeat_password = {\n    type: 'input',\n    config: {\n        type: 'password',\n        placeholder: 'confirm password'\n    },\n    value: '',\n    label: 'Confirm Password'\n};\n\nconst weight =  {\n    type: 'input',\n    config: {\n        type: 'number',\n        placeholder: 'weight'\n    }\n}\n\nconst weightUnit = {\n    type: 'select',\n    config: {\n        type: 'select',\n        options: {\n            lbs: 'lbs',\n            kg: 'kg'\n        }\n    }\n}\nconst measure = placeholder => {\n    return {\n        type: 'input',\n        config: {\n            type: 'number',\n            placeholder: placeholder\n        }\n    }\n}\n\nconst unit = options => {\n    return {\n        type: 'select',\n        config: {\n            type: 'select',\n            options: options\n        }\n    }\n}\n\nconst heaviness = {\n    lbs: 'lbs',\n    kg: 'kg'\n}\n\nconst thickness = {\n    lbs: 'cm',\n    kg: 'inch'\n}\n\nexport const signinForm = {\n    weight:  {\n        value: measure('weight'),\n        unit: unit(heaviness)\n    },\n    waist: {\n        value: measure('waist'),\n        unit: unit(thickness)\n    }\n};\n\nexport const signupForm = {\n    email: email,\n    password: password,\n    repeat_password: repeat_password\n}\n\nexport const workoutSessionForm = {\n\n}\n\nexport const formInputChanged = ( form, event, key) => {\n    const updatedFormElement = updateObject(form[key], { value: event.target.value});\n    return updateObject(form, { [key]: updatedFormElement });\n}\n"]},"metadata":{},"sourceType":"module"}