{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js\";\nimport React from 'react';\nimport classes from './Table.module.css';\n\nconst renderTableData = (data, key) => {\n  return data.map(values => {\n    const tableData = Object.keys(values).map(key => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: values[key]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [tableData, /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => this.props.removeClicked(values),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, values[key], true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  });\n};\n\nconst renderTableColumnNames = (data, key) => {\n  return data.slice(0, 1).map(values => {\n    const tableColumnNames = Object.keys(values).map(key => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: key.charAt(0).toUpperCase() + key.slice(1)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: tableColumnNames\n    }, values[key], false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  });\n};\n\nconst table = props => {\n  const table = this.props.data && this.props.data.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: this.renderTableData(this.props.data, this.props.keyValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Nothing to display!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Table,\n    children: [this.props.tableHeader, table]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\nexport default table;","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js"],"names":["React","classes","renderTableData","data","key","map","values","tableData","Object","keys","props","removeClicked","renderTableColumnNames","slice","tableColumnNames","charAt","toUpperCase","table","length","keyValue","Table","tableHeader"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,SAAOD,IAAI,CAACE,GAAL,CAAUC,MAAM,IAAI;AACvB,UAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBD,GAApB,CAA0BD,GAAD,IAAS;AAChD,0BACI;AAAA,kBAAeE,MAAM,CAACF,GAAD;AAArB,SAASA,GAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJiB,CAAlB;AAKA,wBACI;AAAA,iBACKG,SADL,eAEI;AAAA,+BACI;AAAG,UAAA,OAAO,EAAG,MAAM,KAAKG,KAAL,CAAWC,aAAX,CAAyBL,MAAzB,CAAnB;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAASA,MAAM,CAACF,GAAD,CAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAhBM,CAAP;AAiBH,CAlBD;;AAoBA,MAAMQ,sBAAsB,GAAG,CAACT,IAAD,EAAOC,GAAP,KAAe;AAC1C,SAAOD,IAAI,CAACU,KAAL,CAAW,CAAX,EAAa,CAAb,EAAgBR,GAAhB,CAAqBC,MAAM,IAAI;AAClC,UAAMQ,gBAAgB,GAAGN,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBD,GAApB,CAAyBD,GAAG,IAAI;AACrD,0BACI;AAAA,kBAAgBA,GAAG,CAACW,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BZ,GAAG,CAACS,KAAJ,CAAU,CAAV;AAA9C,SAAST,GAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJwB,CAAzB;AAKA,wBACI;AAAA,gBACKU;AADL,OAASR,MAAM,CAACF,GAAD,CAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAXM,CAAP;AAYH,CAbD;;AAeA,MAAMa,KAAK,GAAGP,KAAK,IAAI;AACnB,QAAMO,KAAK,GAAG,KAAKP,KAAL,CAAWP,IAAX,IAAmB,KAAKO,KAAL,CAAWP,IAAX,CAAgBe,MAAhB,GAAyB,CAA5C,gBACV;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACK,KAAKhB,eAAL,CAAqB,KAAKQ,KAAL,CAAWP,IAAhC,EAAsC,KAAKO,KAAL,CAAWS,QAAjD;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADU,gBASV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ;AAWA,sBACI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,KAAxB;AAAA,eACK,KAAKV,KAAL,CAAWW,WADhB,EAEKJ,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;AAoBA,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nimport classes from './Table.module.css';\n\nconst renderTableData = (data, key) => {\n    return data.map( values => {\n        const tableData = Object.keys(values).map( (key) => {\n            return (\n                <td key={key}>{values[key]}</td>\n            )\n        });\n        return (\n            <tr key={values[key]}>\n                {tableData}\n                <td>\n                    <a onClick={ () => this.props.removeClicked(values)}>\n                        <FontAwesomeIcon icon=\"trash\"/>    \n                    </a>\n                </td>\n            </tr>\n        );\n    });\n};\n\nconst renderTableColumnNames = (data, key) => {\n    return data.slice(0,1).map( values => {\n        const tableColumnNames = Object.keys(values).map( key => {\n            return (\n                <th key={key}>{ key.charAt(0).toUpperCase() + key.slice(1) }</th>\n            )\n        });\n        return (\n            <tr key={values[key]}>\n                {tableColumnNames}\n            </tr>\n        );\n    });\n}\n\nconst table = props => {\n    const table = this.props.data && this.props.data.length > 0 ? (\n        <table>\n            <thead>\n                {/* {this.renderTableColumnNames(this.props.data, this.props.keyValue)} */}\n            </thead>\n            <tbody>\n                {this.renderTableData(this.props.data, this.props.keyValue)}\n            </tbody>\n        </table>\n    ) : <span>Nothing to display!</span>\n\n    return (\n        <div className={classes.Table}>\n            {this.props.tableHeader}\n            {table}\n        </div>\n    );\n};\n\nexport default table;"]},"metadata":{},"sourceType":"module"}