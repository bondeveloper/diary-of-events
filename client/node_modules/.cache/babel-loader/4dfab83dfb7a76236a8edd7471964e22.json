{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged } from '../../../shared/form-utility';\nimport classes from './Signup.module.css';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signupForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      const updatedFormElement = updateObject(this.state.form[key], {\n        value: event.target.value\n      });\n      const updatedForm = updateObject(this.state.form, {\n        [key]: updatedFormElement\n      });\n      this.setState({\n        form: updatedForm\n      });\n    };\n\n    this.onSignupHandler = event => {\n      event.preventDefault();\n      this.props.onSignup(mapKeyToValue(this.state.form));\n    };\n  }\n\n  render() {\n    let formElements = [];\n\n    for (let key in this.state.form) {\n      formElements.push({\n        key: key,\n        settings: this.state.form[key]\n      });\n    }\n\n    let form = formElements.map(ele => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: ele.settings.type,\n        config: ele.settings.config,\n        value: ele.settings.value,\n        label: ele.settings.label,\n        changed: event => this.inputChangedHandler(event, ele.key)\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"Success\",\n            clicked: this.onSignupHandler,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"Cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js"],"names":["React","Component","connect","actions","Input","Button","formObjectToArray","mapKeyToValue","signupForm","formInputChanged","classes","Signup","state","form","inputChangedHandler","event","key","updatedFormElement","updateObject","value","target","updatedForm","setState","onSignupHandler","preventDefault","props","onSignup","render","formElements","push","settings","map","ele","type","config","label","Buttons","mapStateToProps","isAuth","signin","token","mapDispatchToProps","dispatch","data","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged} from '../../../shared/form-utility';\n\nimport classes from './Signup.module.css';\n\nclass Signup extends Component {\n    state = {\n        form: signupForm\n    }\n\n    inputChangedHandler = (event, key) => {\n        const updatedFormElement = updateObject(this.state.form[key], { value: event.target.value});\n        const updatedForm = updateObject(this.state.form, { [key]: updatedFormElement });\n        this.setState({ form: updatedForm });\n    }\n\n    onSignupHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onSignup( mapKeyToValue( this.state.form ) );\n    }\n\n    render () {\n        let formElements = [];\n        for ( let key in this.state.form) {\n            formElements.push({\n                key: key,\n                settings: this.state.form[key]\n            })\n        }\n\n        let form = formElements.map( ele => {\n            return <Input\n                key={ele.key}\n                type={ele.settings.type}\n                config={ele.settings.config}\n                value={ele.settings.value}\n                label={ele.settings.label}\n                changed={ event => this.inputChangedHandler( event, ele.key)}\n                />\n\n        });\n\n\n        return (\n            <div>\n                <form>\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button type='Success' clicked={this.onSignupHandler}>Signup</Button>\n                        <Button type='Cancel'>Cancel</Button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) )\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( Signup );"]},"metadata":{},"sourceType":"module"}