{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Toast from 'react-bootstrap/Toast';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickedHandler = (data, action) => {\n      switch (action) {\n        case 'view':\n          this.props.viewClicked(data);\n          break;\n\n        case 'delete':\n          this.props.deleteClicked(data);\n      }\n    };\n\n    this.renderTableData = (data, key, exclude) => {\n      return [...data].map(values => {\n        const pk = values[key];\n        let valuesCopy = { ...values\n        };\n\n        for (let x of exclude) {\n          delete valuesCopy[x];\n        }\n\n        const tableData = Object.keys(valuesCopy).map(id => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: values[id]\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableData, /*#__PURE__*/_jsxDEV(\"td\", {\n            className: classes.Actions,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"eye\",\n              size: \"sm\",\n              className: classes.ViewBtnIcon,\n              onClick: () => this.onClickedHandler(values, 'view')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"trash-alt\",\n              size: \"sm\",\n              className: classes.DeleteBtnIcon,\n              onClick: () => this.onClickedHandler(pk, 'delete')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, `action' + ${key}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, key + pk, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.renderTableColumnNames = (data, key, exclude) => {\n      return [...data].slice(0, 1).map(values => {\n        const pk = values[key];\n        let valuesCopy = { ...values\n        };\n\n        for (let x of exclude) {\n          delete valuesCopy[x];\n        }\n\n        const tableColumnNames = Object.keys(valuesCopy).map(x => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: transformUnderscoreCaseToSentenceCase(x)\n          }, x, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableColumnNames, /*#__PURE__*/_jsxDEV(\"th\", {}, 'action' + pk, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, key + pk, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    const table = this.props.data && this.props.data.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: this.renderTableColumnNames(this.props.data, this.props.keyValue, this.props.excludeFromTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderTableData(this.props.data, this.props.keyValue, this.props.excludeFromTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Toast, {\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"mr-auto\",\n          children: \"Oops!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: \"You currently don't have any workouts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Table,\n      children: [this.props.tableHeader, table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js"],"names":["React","Component","Table","Toast","FontAwesomeIcon","transformUnderscoreCaseToSentenceCase","excludeKeyFromObj","classes","CustomTable","onClickedHandler","data","action","props","viewClicked","deleteClicked","renderTableData","key","exclude","map","values","pk","valuesCopy","x","tableData","Object","keys","id","Actions","ViewBtnIcon","DeleteBtnIcon","renderTableColumnNames","slice","tableColumnNames","render","table","length","keyValue","excludeFromTable","tableHeader"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Toast from 'react-bootstrap/Toast';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\n\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n\n    onClickedHandler = ( data, action ) => {\n        switch ( action ) {\n            case 'view' :\n                this.props.viewClicked( data );\n                break;\n            case 'delete':\n                this.props.deleteClicked( data );\n        }\n    }\n\n    renderTableData = (data, key, exclude) => {\n        return [...data].map( values => {\n            const pk = values[key];\n            let valuesCopy = {...values};\n            \n            for ( let x of exclude ) {\n                delete valuesCopy[x];\n            }\n\n            const tableData = Object.keys( valuesCopy ).map( id => {\n                return (\n                    <td key={id}>{ values[id] }</td>\n                )\n            });\n            return (\n                <tr key={ key + pk }>\n                    {tableData}\n                    <td key={`action' + ${key}`} className={classes.Actions}>\n                        <FontAwesomeIcon icon='eye' size='sm' className={classes.ViewBtnIcon} onClick={ () => this.onClickedHandler( values, 'view' ) } />\n                        <FontAwesomeIcon icon='trash-alt' size='sm' className={classes.DeleteBtnIcon} onClick={ () => this.onClickedHandler( pk, 'delete' ) }/>\n                    </td>\n                </tr>\n            );\n        });\n    };\n    \n    renderTableColumnNames = (data, key, exclude) => {\n        return [...data].slice(0,1).map( values => {\n            const pk = values[key];\n            let valuesCopy = {...values};\n                \n            for ( let x of exclude ) {\n                delete valuesCopy[x];\n            }\n\n            const tableColumnNames = Object.keys( valuesCopy ).map( x => {\n    \n                return (\n                    <th key={x}>{ transformUnderscoreCaseToSentenceCase( x ) }</th>\n                    )\n                });\n            return (\n                <tr key={ key + pk }>\n                    {tableColumnNames}\n                    <th key={'action' + pk}></th>\n                </tr>\n            );\n        });\n    }\n\n    render () {\n             \n        const table = this.props.data && this.props.data.length > 0 ? (\n            <Table striped bordered hover responsive=\"sm\">\n                <thead>\n                    {this.renderTableColumnNames(this.props.data, this.props.keyValue, this.props.excludeFromTable)}\n                </thead>\n                <tbody>\n                    {this.renderTableData(this.props.data, this.props.keyValue, this.props.excludeFromTable)}\n                </tbody>\n            </Table>\n        ) : (\n            <Toast>\n                <Toast.Header>\n                <strong className=\"mr-auto\">Oops!</strong>\n                </Toast.Header>\n                <Toast.Body>You currently don't have any workouts</Toast.Body>\n            </Toast>\n            )\n\n        return (\n            <div className={classes.Table}>\n                {this.props.tableHeader}\n                {table}\n            </div>\n        );\n    }\n}\n\n\nexport default CustomTable;"]},"metadata":{},"sourceType":"module"}