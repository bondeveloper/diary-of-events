{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged } from '../../../shared/form-utility';\nimport classes from './Signup.module.css';\nimport { Form } from 'react-bootstrap';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signupForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSignupHandler = event => {\n      event.preventDefault();\n      this.props.onSignup(mapKeyToValue(this.state.form));\n    };\n  }\n\n  render() {\n    let form = formObjectToArray(this.state.form).map(ele => {\n      // return <Input\n      //     key={ele.key}\n      //     type={ele.settings.type}\n      //     config={ele.settings.config}\n      //     value={ele.settings.value}\n      //     label={ele.settings.label}\n      //     changed={ event => this.inputChangedHandler( event, ele.key)}\n      //     />\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\" \", ele.settings.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: ele.settings.type,\n          placeholder: ele.settings.config.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Signup,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            clicked: this.onSignupHandler,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js"],"names":["React","Component","connect","Button","actions","Input","formObjectToArray","mapKeyToValue","signupForm","formInputChanged","classes","Form","Signup","state","form","inputChangedHandler","event","key","setState","onSignupHandler","preventDefault","props","onSignup","render","map","ele","settings","label","type","config","placeholder","Buttons","mapStateToProps","console","log","isAuth","signin","token","mapDispatchToProps","dispatch","data","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged} from '../../../shared/form-utility';\n\nimport classes from './Signup.module.css';\nimport { Form } from 'react-bootstrap';\n\nclass Signup extends Component {\n    state = {\n        form: signupForm\n    }\n\n    inputChangedHandler = (event, key) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSignupHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onSignup( mapKeyToValue( this.state.form ) );\n    }\n\n    render () {\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            // return <Input\n            //     key={ele.key}\n            //     type={ele.settings.type}\n            //     config={ele.settings.config}\n            //     value={ele.settings.value}\n            //     label={ele.settings.label}\n            //     changed={ event => this.inputChangedHandler( event, ele.key)}\n            //     />\n            return (\n                <Form.Group controlId={ ele.key } key={ ele.key }>\n                    <Form.Label> { ele.settings.label }</Form.Label>\n                    <Form.Control type={ ele.settings.type } placeholder={ ele.settings.config.placeholder } />\n                </Form.Group>\n            )\n\n        });\n\n        return (\n            <div className={classes.Signup}>\n                <form>\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button variant='danger' clicked={this.onSignupHandler}>Signup</Button>\n                        <Button variant='secondary'>Cancel</Button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        isAuth: state.signin.token !== null,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) )\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( Signup );"]},"metadata":{},"sourceType":"module"}