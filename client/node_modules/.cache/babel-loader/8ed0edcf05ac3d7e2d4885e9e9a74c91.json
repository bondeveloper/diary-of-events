{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickedHandler = data => {\n      this.props.viewClicked(data);\n    };\n\n    this.renderTableData = (data, key, exclude) => {\n      return [...data].map(values => {\n        const pk = values[key];\n        let valuesCopy = { ...values\n        };\n        const selectedData = values;\n\n        for (let x of exclude) {\n          console.log(x);\n          delete valuesCopy[x];\n        }\n\n        console.log(valuesCopy);\n        const tableData = Object.keys(excludeKeyFromObj({ ...valuesCopy\n        }, key)).map(id => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: values[id]\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableData, /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              onClick: () => this.onClickedHandler(values),\n              children: \"view\"\n            }, pk, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)\n          }, 'action' + key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, key + valuesCopy[key], true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.renderTableColumnNames = (data, key) => {\n      return [...data].slice(0, 1).map(values => {\n        const tableColumnNames = Object.keys(excludeKeyFromObj({ ...values\n        }, key)).map(key => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: transformUnderscoreCaseToSentenceCase(key)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableColumnNames, /*#__PURE__*/_jsxDEV(\"th\", {}, 'action' + values[key], false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, key + values[key], true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const table = this.props.data && this.props.data.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: this.renderTableColumnNames(this.props.data, this.props.keyValue, this.props.excludeFromTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderTableData(this.props.data, this.props.keyValue, this.props.excludeFromTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Nothing to display!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Table,\n      children: [this.props.tableHeader, table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js"],"names":["React","Component","Table","Button","transformUnderscoreCaseToSentenceCase","excludeKeyFromObj","classes","CustomTable","onClickedHandler","data","props","viewClicked","renderTableData","key","exclude","map","values","pk","valuesCopy","selectedData","x","console","log","tableData","Object","keys","id","renderTableColumnNames","slice","tableColumnNames","render","table","length","keyValue","excludeFromTable","tableHeader"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\n\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n\n    onClickedHandler = ( data ) => {\n        this.props.viewClicked( data );\n    }\n\n    renderTableData = (data, key, exclude) => {\n        return [...data].map( values => {\n            const pk = values[key];\n            let valuesCopy = {...values};\n            const selectedData = values;\n            \n            for ( let x of exclude ) {\n                console.log(x);\n                delete valuesCopy[x];\n            }\n\n\n            console.log(valuesCopy);\n\n            const tableData = Object.keys( excludeKeyFromObj( {...valuesCopy}, key ) ).map( id => {\n                return (\n                    <td key={id}>{ values[id] }</td>\n                )\n            });\n            return (\n                <tr key={ key + valuesCopy[key] }>\n                    {tableData}\n                    <td key={'action' + key}>\n                        <Button variant='link' key={pk} onClick={ () => this.onClickedHandler( values ) }>view</Button>\n                    </td>\n                </tr>\n            );\n        });\n    };\n    \n    renderTableColumnNames = (data, key) => {\n        return [...data].slice(0,1).map( values => {\n            const tableColumnNames = Object.keys( excludeKeyFromObj( {...values}, key ) ).map( key => {\n                return (\n                    <th key={key}>{ transformUnderscoreCaseToSentenceCase( key ) }</th>\n                    )\n                });\n            return (\n                <tr key={ key + values[key] }>\n                    {tableColumnNames}\n                    <th key={'action' + values[key]}></th>\n                </tr>\n            );\n        });\n    }\n\n    render () {\n        console.log(this.props);\n             \n        const table = this.props.data && this.props.data.length > 0 ? (\n            <Table striped bordered hover responsive=\"sm\">\n                <thead>\n                    {this.renderTableColumnNames(this.props.data, this.props.keyValue, this.props.excludeFromTable)}\n                </thead>\n                <tbody>\n                    {this.renderTableData(this.props.data, this.props.keyValue, this.props.excludeFromTable)}\n                </tbody>\n            </Table>\n        ) : <span>Nothing to display!</span>\n\n        return (\n            <div className={classes.Table}>\n                {this.props.tableHeader}\n                {table}\n            </div>\n        );\n    }\n}\n\n\nexport default CustomTable;"]},"metadata":{},"sourceType":"module"}