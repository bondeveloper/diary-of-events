{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js\";\nimport React, { Component } from 'react';\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport classes from './Create.module.css';\n\nclass CreateWorkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: workoutForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onCreateWorkout = () => {\n      this.props.onCreateWorkout({\n        data: tranformPascalCaseToUnderscoreCase(mapKeyToValue(this.state.form)),\n        token: this.props.token\n      });\n    };\n  }\n\n  render() {\n    let form = formObjectToArray(this.state.form).map(ele => {\n      let formElements = null;\n\n      switch (ele.settings.type) {\n        case 'input':\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              className: \"my-1\",\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\" \", ele.settings.label, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: ele.settings.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: ele.settings.type,\n                id: ele.key,\n                placeholder: ele.settings.config.placeholder,\n                onChange: event => this.inputChangedHandler(event, ele.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 'select':\n          const optionsData = ele.settings.config.options;\n          const options = Object.keys(optionsData).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: [\" \", optionsData[key]]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this);\n          });\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: \"unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Choose...\",\n                id: ele.key,\n                onChange: event => this.inputChangedHandler(event, ele.key),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: [\" \", ele.settings.config.placeholder, \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this), options]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          console.log(ele.settings.type);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"align-items-center\",\n        children: formElements\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Create,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [form, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: this.onCreateWorkout,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.signin.token\n  };\n};\n\nexport default connect(mapStateToProps, null)(CreateWorkout);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js"],"names":["React","Component","workoutForm","formInputChanged","formObjectToArray","tranformPascalCaseToUnderscoreCase","mapKeyToValue","Aux","Col","Form","Button","connect","classes","CreateWorkout","state","form","inputChangedHandler","event","key","setState","onCreateWorkout","props","data","token","render","map","ele","formElements","settings","type","label","config","placeholder","optionsData","options","Object","keys","console","log","Create","mapStateToProps","signin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport classes from './Create.module.css';\n\nclass CreateWorkout extends Component {\n    state = {\n        form: workoutForm\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key ) });\n    }\n\n    onCreateWorkout = () => {\n        this.props.onCreateWorkout({\n            data: tranformPascalCaseToUnderscoreCase( mapKeyToValue( this.state.form ) ),\n            token: this.props.token \n        })\n    }\n\n   render () {\n    \n    let form = formObjectToArray( this.state.form ).map( ele => {\n        let formElements = null;\n\n        switch ( ele.settings.type ) {\n            case 'input' :\n                formElements = (\n                    <Aux>\n                        <Col xs=\"auto\" className=\"my-1\">\n                            <Form.Label> { ele.settings.label } </Form.Label>\n                        </Col>\n                        <Col sm={6} className=\"my-1\">\n                            <Form.Label htmlFor={ele.key} srOnly>\n                            { ele.settings.label }\n                            </Form.Label>\n                            <Form.Control \n                                type={ ele.settings.type }\n                                id={ele.key}\n                                placeholder={ ele.settings.config.placeholder }\n                                onChange={ event => this.inputChangedHandler( event, ele.key ) }/>\n                        </Col>\n                    </Aux>\n                );\n                break;\n            case 'select' :\n                const optionsData = ele.settings.config.options;\n                const options = Object.keys( optionsData ).map( key => {\n                    return (\n                        <option value={ key } key={key}> { optionsData[key] }</option>\n                    )\n                });\n                formElements = (\n                    <Aux>\n                        <Col sm={4} className=\"my-1\">\n                            <Form.Label htmlFor={ele.key} srOnly>\n                                unit\n                            </Form.Label>\n                            <Form.Control \n                                as=\"select\" \n                                defaultValue=\"Choose...\" \n                                id={ ele.key }\n                                onChange={ event => this.inputChangedHandler( event, ele.key )} >\n                                <option> { ele.settings.config.placeholder }...</option>\n                                { options }\n                            </Form.Control>\n                        </Col>\n                    </Aux>\n                );\n                break;\n            default:\n                console.log( ele.settings.type );\n        }\n\n        return (\n            <Form.Row className=\"align-items-center\" key={ ele.key }>\n                { formElements }                 \n            </Form.Row>\n        );\n    });\n\n    return (\n    <div className={classes.Create}>\n        <Form>\n            { form }\n            <Button variant='danger' onClick={this.onCreateWorkout}>\n                Submit\n            </Button>\n        </Form>\n    </div>\n    );\n   }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.signin.token\n    }\n}\n\nexport default connect( mapStateToProps, null ) ( CreateWorkout );"]},"metadata":{},"sourceType":"module"}