{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/List/List.js\";\nimport React, { Component } from 'react';\nimport { Row, Spinner, Accordion, Col, Card, Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../../../../../../store/actions/index';\nimport Aux from '../../../../../../hoc/Aux/Aux';\nimport classes from './List.module.css';\n\nclass WorkoutSessionList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateTimesHandler = (sessionId, key) => {\n      this.props.onUpdateWorkoutSession({\n        id: this.props.view._id,\n        token: this.props.token,\n        sessionId: sessionId,\n        data: {\n          [key]: moment()\n        }\n      });\n    };\n\n    this.deleteSessionHandler = sessionId => {\n      this.props.onDeleteWorkoutSession({\n        sessionId: sessionId,\n        id: this.props.view._id,\n        token: this.props.token\n      });\n    };\n  }\n\n  render() {\n    const sessionData = this.props.view ? this.props.view.sessions.map(session => {\n      let displayTimes,\n          startEndBtn = null;\n\n      if (session.start && session.end) {\n        displayTimes = ` ${moment(session.start).format(' HH:mm:ss')} - ${moment(session.end).format(' HH:mm:ss')}`;\n      } else if (session.start && !session.end) {\n        displayTimes = ` in progress since  ${moment(session.start).format('MMM DD yyyy HH:mm:ss')}  `;\n        startEndBtn = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"stop-circle\",\n          size: \"md\",\n          className: classes.StopBtnIcon,\n          onClick: () => this.updateTimesHandler(session._id, 'end')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this);\n      } else {\n        displayTimes = 'Session not started';\n        startEndBtn = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"play-circle\",\n          size: \"md\",\n          className: classes.StartBtnIcon,\n          onClick: () => this.updateTimesHandler(session._id, 'start')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this);\n      }\n\n      const page = this.props.shouldRedirect && this.props.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 74\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: session._id,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                as: Button,\n                variant: \"link\",\n                eventKey: session._id,\n                children: moment(session.created_at).format('MMM Do YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n              eventKey: session._id,\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [session.weight, \" ( \", session.weight_unit, \" )\"]\n                  }, 'weight', true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 32\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: displayTimes\n                  }, 'time', false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 32\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      href: session.publicUrl,\n                      children: \"link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 47\n                    }, this)\n                  }, 'link', false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 32\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.Buttons,\n                  children: [startEndBtn, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: \"trash-alt\",\n                    size: \"md\",\n                    className: classes.DeleteBtnIcon,\n                    onClick: () => this.deleteSessionHandler(session._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 32\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)\n      }, session._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n      return page;\n    }) : null;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Sessions,\n        children: sessionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.signin.token,\n    view: state.workouts.view,\n    loading: state.workouts.loading,\n    shouldRedirect: state.workouts.shouldRedirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateWorkoutSession: data => dispatch(actions.updateWorkoutSession(data)),\n    onDeleteWorkoutSession: data => dispatch(actions.deleteWorkoutSession(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkoutSessionList);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/List/List.js"],"names":["React","Component","Row","Spinner","Accordion","Col","Card","Button","Redirect","moment","connect","FontAwesomeIcon","actions","Aux","classes","WorkoutSessionList","updateTimesHandler","sessionId","key","props","onUpdateWorkoutSession","id","view","_id","token","data","deleteSessionHandler","onDeleteWorkoutSession","render","sessionData","sessions","map","session","displayTimes","startEndBtn","start","end","format","StopBtnIcon","StartBtnIcon","page","shouldRedirect","redirect","created_at","weight","weight_unit","publicUrl","Buttons","DeleteBtnIcon","Sessions","mapStateToProps","state","signin","workouts","loading","mapDispatchToProps","dispatch","updateWorkoutSession","deleteWorkoutSession"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Spinner, Accordion, Col, Card, Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport * as actions from '../../../../../../store/actions/index';\nimport Aux from '../../../../../../hoc/Aux/Aux';\n\nimport classes from './List.module.css';\n\nclass WorkoutSessionList extends Component {\n\n    updateTimesHandler = ( sessionId, key ) => {\n        this.props.onUpdateWorkoutSession( {\n            id: this.props.view._id,\n            token: this.props.token,\n            sessionId: sessionId,\n            data: {\n                [ key ]: moment()\n            }\n        } );\n    }\n    deleteSessionHandler = sessionId => {\n        this.props.onDeleteWorkoutSession({\n            sessionId: sessionId,\n            id: this.props.view._id,\n            token: this.props.token\n        });\n    }\n\n    render () {\n        const sessionData = this.props.view ? ( this.props.view.sessions.map ( session => {\n            let displayTimes, startEndBtn = null;\n            if ( session.start && session.end  ) {\n                displayTimes = ` ${ moment( session.start ).format(' HH:mm:ss')} - ${ moment( session.end ).format(' HH:mm:ss') }`;\n            }else if ( session.start && !session.end  ) {\n                displayTimes = ` in progress since  ${ moment( session.start ).format('MMM DD yyyy HH:mm:ss') }  `;\n                startEndBtn = <FontAwesomeIcon icon='stop-circle' size='md' className={classes.StopBtnIcon} onClick={ () => this.updateTimesHandler( session._id, 'end' ) }/>\n            }else {\n                displayTimes = 'Session not started';\n                startEndBtn = <FontAwesomeIcon icon='play-circle' size='md' className={classes.StartBtnIcon} onClick={ () => this.updateTimesHandler( session._id, 'start' ) }/>\n            }\n\n        const page = this.props.shouldRedirect && this.props.redirect ? (<Redirect to={this.props.redirect} />) :\n        (\n            <Col md='3' key={session._id}>\n               <Accordion defaultActiveKey={ session._id }>\n                   <Card>\n                       <Card.Header>\n                       <Accordion.Toggle as={Button} variant=\"link\" eventKey={ session._id}>\n                       {moment( session.created_at ).format('MMM Do YYYY')}\n                       </Accordion.Toggle>\n                       </Card.Header>\n                       <Accordion.Collapse eventKey={ session._id}>\n                       <Card.Body>\n                           <ul>\n                               <li key='weight'>{ session.weight } ( { session.weight_unit } )</li>\n                               <li key='time'>{ displayTimes }</li>\n                               <li key='link'><Button variant='link' href={ session.publicUrl }>link</Button></li>\n                           </ul>\n                           <div className={classes.Buttons}>\n                               { startEndBtn }\n                               <FontAwesomeIcon icon='trash-alt' size='md' className={classes.DeleteBtnIcon} onClick={ () => this.deleteSessionHandler( session._id ) }/>\n                           </div>\n                       </Card.Body>\n                       </Accordion.Collapse>\n                   </Card>\n               </Accordion>\n           </Col>\n        )\n            return page;\n        }) ) : null;\n\n        return (\n            <Row>\n                <div className={classes.Sessions}>\n                    { sessionData }\n                </div>\n            </Row>\n        );\n    }\n};\nconst mapStateToProps = state => {\n    return {\n        token: state.signin.token,\n        view: state.workouts.view,\n        loading: state.workouts.loading,\n        shouldRedirect: state.workouts.shouldRedirect,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateWorkoutSession: data => dispatch( actions.updateWorkoutSession( data ) ),\n        onDeleteWorkoutSession: data => dispatch( actions.deleteWorkoutSession( data ) )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) ( WorkoutSessionList );\n"]},"metadata":{},"sourceType":"module"}