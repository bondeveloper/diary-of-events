{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js\";\nimport React, { Component } from 'react';\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { Container, Col, Form, Button, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onCreateWorkoutHandler = form => {\n      this.setState({\n        validated: true\n      });\n      this.props.onCreateWorkout({\n        data: form,\n        token: this.props.token\n      }); // this.props.history.push( this.props.redirect );\n      // return <Redirect to={ this.props.redirect} />;\n    };\n  }\n\n  render() {\n    const signinBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this) : 'submit';\n    const schema = yup.object({\n      name: yup.string().required(),\n      description: yup.string().required()\n    });\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: this.onCreateWorkoutHandler,\n      initialValues: {\n        name: '',\n        description: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: values.name,\n            onChange: handleChange,\n            isInvalid: !!errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"textarea\",\n            placeholder: \"Description\",\n            name: \"password\",\n            value: values.description,\n            onChange: handleChange,\n            isInvalid: !!errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: btnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            disabled: this.props.loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.signin.token,\n    view: state.workouts.view,\n    redirect: state.workouts.redirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateWorkout: data => dispatch(actions.createWorkout(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWorkout);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js"],"names":["React","Component","workoutForm","formInputChanged","formObjectToArray","tranformPascalCaseToUnderscoreCase","mapKeyToValue","Aux","Container","Col","Form","Button","Spinner","connect","Redirect","Formik","yup","classes","actions","CreateWorkout","state","validated","inputChangedHandler","event","key","setState","form","onCreateWorkoutHandler","props","onCreateWorkout","data","token","render","signinBtnChild","loading","schema","object","name","string","required","description","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","Buttons","btnChild","mapStateToProps","signin","view","workouts","redirect","mapDispatchToProps","dispatch","createWorkout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { Container, Col, Form, Button, Spinner} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n    state = {\n        validated: false\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key ) });\n    }\n\n    onCreateWorkoutHandler = form => {\n        this.setState({ validated: true });\n        this.props.onCreateWorkout({\n            data: form,\n            token: this.props.token\n        });\n\n        // this.props.history.push( this.props.redirect );\n        // return <Redirect to={ this.props.redirect} />;\n    }\n\n   render () {\n\n    const signinBtnChild = this.props.loading ? (\n       <Aux>\n           <Spinner\n           as=\"span\"\n           animation=\"grow\"\n           size=\"sm\"\n           role=\"status\"\n           aria-hidden=\"true\"\n           />\n           Loading...\n       </Aux>\n   ): 'submit';\n\n    const schema = yup.object({\n        name: yup.string().required(),\n        description: yup.string().required(),\n    });\n\n    return (\n        <Formik\n            validationSchema={schema}\n            onSubmit={this.onCreateWorkoutHandler}\n            initialValues={{\n                name: '',\n                description: ''\n            }}\n        >\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n        }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group as={Col} controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    isInvalid={!!errors.name}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.name}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"description\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"textarea\"\n                        placeholder=\"Description\"\n                        name=\"password\"\n                        value={values.description}\n                        onChange={handleChange}\n                        isInvalid={!!errors.description}\n                    />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.description}\n                      </Form.Control.Feedback>\n                </Form.Group>\n                <div className={classes.Buttons}>\n                    <Button variant='danger' type=\"submit\">{ btnChild }</Button>\n                    <Button variant='secondary' disabled={this.props.loading}>Cancel</Button>\n                </div>\n            </Form>\n        )}\n      </Formik>);\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.signin.token,\n        view: state.workouts.view,\n        redirect: state.workouts.redirect\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateWorkout: data => dispatch( actions.createWorkout( data ))\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps ) ( CreateWorkout );\n"]},"metadata":{},"sourceType":"module"}