{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/List/List.js\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../../../../store/actions/index';\nimport classes from './List.module.css';\n\nclass WorkoutSessionList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateTimesHandler = (sessionId, key) => {\n      this.props.onUpdateWorkoutSession({\n        id: this.props.id,\n        token: this.props.token,\n        sessionId: sessionId,\n        data: {\n          [key]: moment()\n        }\n      });\n    };\n\n    this.deleteSessionHandler = sessionId => {\n      this.props.onDeleteWorkoutSession({\n        sessionId: sessionId,\n        id: this.props.view._id,\n        token: this.props.token\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props.sessions);\n    const sessionData = this.props.view.sessions.map(session => {\n      let displayTimes,\n          startEndBtn = null;\n\n      if (session.start && session.end) {\n        displayTimes = ` ${moment(session.start).format(' HH:mm:ss')} - ${moment(session.end).format(' HH:mm:ss')}`;\n      } else if (session.start && !session.end) {\n        displayTimes = ` in progress since  ${moment(session.start).format('MMM DD yyyy HH:mm:ss')}  `;\n        startEndBtn = /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-warning\",\n          onClick: () => this.updateTimesHandler(session._id, 'end'),\n          children: \"end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 31\n        }, this);\n      } else {\n        displayTimes = 'Session not started';\n        startEndBtn = /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          size: \"sm\",\n          onClick: () => this.updateTimesHandler(session._id, 'start'),\n          children: \"start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 31\n        }, this);\n      }\n\n      const startBtn = !session.start ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        size: \"sm\",\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 47\n      }, this) : null;\n      const endBtn = !session.end ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        size: \"sm\",\n        children: \"end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }, this) : null;\n      return /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: session._id,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                as: Button,\n                variant: \"link\",\n                eventKey: session._id,\n                children: moment(session.created_at).format('MMM Do YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n              eventKey: session._id,\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [session.weight, \" ( \", session.weight_unit, \" )\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: displayTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"link\",\n                      href: session.publicUrl,\n                      children: \"link\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), startEndBtn, /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-danger\",\n                  size: \"sm\",\n                  onClick: () => this.deleteSessionHandler(session._id),\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, session._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 22\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Sessions,\n        children: sessionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    token: state.signin.token,\n    view: state.workouts.view\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateWorkoutSession: data => dispatch(actions.updateWorkoutSession(data)),\n    onDeleteWorkoutSession: data => dispatch(actions.deleteWorkoutSession(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkoutSessionList);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/List/List.js"],"names":["React","Component","Row","Col","Accordion","Card","Button","moment","connect","actions","classes","WorkoutSessionList","updateTimesHandler","sessionId","key","props","onUpdateWorkoutSession","id","token","data","deleteSessionHandler","onDeleteWorkoutSession","view","_id","render","console","log","sessions","sessionData","map","session","displayTimes","startEndBtn","start","end","format","startBtn","endBtn","created_at","weight","weight_unit","publicUrl","Sessions","mapStateToProps","state","signin","workouts","mapDispatchToProps","dispatch","updateWorkoutSession","deleteWorkoutSession"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,uCAAzB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,kBAAN,SAAiCV,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAEvCW,kBAFuC,GAElB,CAAEC,SAAF,EAAaC,GAAb,KAAsB;AACvC,WAAKC,KAAL,CAAWC,sBAAX,CAAmC;AAC/BC,QAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWE,EADgB;AAE/BC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAFa;AAG/BL,QAAAA,SAAS,EAAEA,SAHoB;AAI/BM,QAAAA,IAAI,EAAE;AACF,WAAEL,GAAF,GAASP,MAAM;AADb;AAJyB,OAAnC;AAQH,KAXsC;;AAAA,SAYvCa,oBAZuC,GAYdP,SAAF,IAAiB;AACpC,WAAKE,KAAL,CAAWM,sBAAX,CAAkC;AAC9BR,QAAAA,SAAS,EAAEA,SADmB;AAE9BI,QAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWO,IAAX,CAAgBC,GAFU;AAG9BL,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAHY,OAAlC;AAKH,KAlBsC;AAAA;;AAoBvCM,EAAAA,MAAM,GAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKX,KAAL,CAAWY,QAAxB;AACA,UAAMC,WAAW,GAAG,KAAKb,KAAL,CAAWO,IAAX,CAAgBK,QAAhB,CAAyBE,GAAzB,CAA+BC,OAAO,IAAI;AAC1D,UAAIC,YAAJ;AAAA,UAAkBC,WAAW,GAAG,IAAhC;;AACA,UAAKF,OAAO,CAACG,KAAR,IAAiBH,OAAO,CAACI,GAA9B,EAAqC;AACjCH,QAAAA,YAAY,GAAI,IAAIxB,MAAM,CAAEuB,OAAO,CAACG,KAAV,CAAN,CAAwBE,MAAxB,CAA+B,WAA/B,CAA4C,MAAM5B,MAAM,CAAEuB,OAAO,CAACI,GAAV,CAAN,CAAsBC,MAAtB,CAA6B,WAA7B,CAA2C,EAAjH;AACH,OAFD,MAEM,IAAKL,OAAO,CAACG,KAAR,IAAiB,CAACH,OAAO,CAACI,GAA/B,EAAsC;AACxCH,QAAAA,YAAY,GAAI,uBAAuBxB,MAAM,CAAEuB,OAAO,CAACG,KAAV,CAAN,CAAwBE,MAAxB,CAA+B,sBAA/B,CAAwD,IAA/F;AACAH,QAAAA,WAAW,gBAAG,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,OAAO,EAAG,MAAM,KAAKpB,kBAAL,CAAyBkB,OAAO,CAACP,GAAjC,EAAsC,KAAtC,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AACH,OAHK,MAGA;AACFQ,QAAAA,YAAY,GAAG,qBAAf;AACAC,QAAAA,WAAW,gBAAG,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,iBAAhB;AAAkC,UAAA,IAAI,EAAC,IAAvC;AAA4C,UAAA,OAAO,EAAG,MAAM,KAAKpB,kBAAL,CAAyBkB,OAAO,CAACP,GAAjC,EAAsC,OAAtC,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AACH;;AACD,YAAMa,QAAQ,GAAG,CAACN,OAAO,CAACG,KAAT,gBAAiB,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAkC,QAAA,IAAI,EAAC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB,GAA8E,IAA/F;AACA,YAAMI,MAAM,GAAG,CAACP,OAAO,CAACI,GAAT,gBAAe,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,IAAI,EAAC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,GAAyE,IAAxF;AACA,0BAAS,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA,+BACG,QAAC,SAAD;AAAW,UAAA,gBAAgB,EAAGJ,OAAO,CAACP,GAAtC;AAAA,iCACI,QAAC,IAAD;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAA,qCACA,QAAC,SAAD,CAAW,MAAX;AAAkB,gBAAA,EAAE,EAAEjB,MAAtB;AAA8B,gBAAA,OAAO,EAAC,MAAtC;AAA6C,gBAAA,QAAQ,EAAGwB,OAAO,CAACP,GAAhE;AAAA,0BACChB,MAAM,CAAEuB,OAAO,CAACQ,UAAV,CAAN,CAA6BH,MAA7B,CAAoC,aAApC;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,SAAD,CAAW,QAAX;AAAoB,cAAA,QAAQ,EAAGL,OAAO,CAACP,GAAvC;AAAA,qCACA,QAAC,IAAD,CAAM,IAAN;AAAA,wCACI;AAAA,0CACI;AAAA,+BAAMO,OAAO,CAACS,MAAd,SAA2BT,OAAO,CAACU,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA,2CAAI,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,MAAhB;AAAuB,sBAAA,IAAI,EAAGD,OAAO,CAACW,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAMMT,WANN,eAOI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,gBAAhB;AAAiC,kBAAA,IAAI,EAAC,IAAtC;AAA2C,kBAAA,OAAO,EAAG,MAAM,KAAKZ,oBAAL,CAA2BU,OAAO,CAACP,GAAnC,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADH,SAAiBO,OAAO,CAACP,GAAzB;AAAA;AAAA;AAAA;AAAA,cAAT;AAwBH,KArCmB,CAApB;AAuCA,wBACI,QAAC,GAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEb,OAAO,CAACgC,QAAxB;AAAA,kBACMd;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApEsC;;AAqE1C;;AACD,MAAMe,eAAe,GAAGC,KAAK,IAAI;AAC7BnB,EAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACA,SAAO;AACH1B,IAAAA,KAAK,EAAE0B,KAAK,CAACC,MAAN,CAAa3B,KADjB;AAEHI,IAAAA,IAAI,EAAEsB,KAAK,CAACE,QAAN,CAAexB;AAFlB,GAAP;AAIH,CAND;;AAOA,MAAMyB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhC,IAAAA,sBAAsB,EAAEG,IAAI,IAAI6B,QAAQ,CAAEvC,OAAO,CAACwC,oBAAR,CAA8B9B,IAA9B,CAAF,CADrC;AAEHE,IAAAA,sBAAsB,EAAEF,IAAI,IAAI6B,QAAQ,CAAEvC,OAAO,CAACyC,oBAAR,CAA8B/B,IAA9B,CAAF;AAFrC,GAAP;AAIH,CALD;;AAOA,eAAeX,OAAO,CAACmC,eAAD,EAAkBI,kBAAlB,CAAP,CAA+CpC,kBAA/C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../../../../store/actions/index';\n\nimport classes from './List.module.css';\n\nclass WorkoutSessionList extends Component {\n\n    updateTimesHandler = ( sessionId, key ) => {\n        this.props.onUpdateWorkoutSession( {\n            id: this.props.id,\n            token: this.props.token,\n            sessionId: sessionId,\n            data: {\n                [ key ]: moment()\n            }\n        } );\n    }\n    deleteSessionHandler = ( sessionId ) => {\n        this.props.onDeleteWorkoutSession({\n            sessionId: sessionId,\n            id: this.props.view._id,\n            token: this.props.token\n        });\n    }\n\n    render () {\n        console.log( this.props.sessions );\n        const sessionData = this.props.view.sessions.map ( session => {\n            let displayTimes, startEndBtn = null;\n            if ( session.start && session.end  ) {\n                displayTimes = ` ${ moment( session.start ).format(' HH:mm:ss')} - ${ moment( session.end ).format(' HH:mm:ss') }`;\n            }else if ( session.start && !session.end  ) {\n                displayTimes = ` in progress since  ${ moment( session.start ).format('MMM DD yyyy HH:mm:ss') }  `;\n                startEndBtn = <Button variant='outline-warning' onClick={ () => this.updateTimesHandler( session._id, 'end' ) }>end</Button>\n            }else {\n                displayTimes = 'Session not started';\n                startEndBtn = <Button variant='outline-primary' size='sm' onClick={ () => this.updateTimesHandler( session._id, 'start' ) }>start</Button>\n            }\n            const startBtn = !session.start ? <Button variant='outline-primary' size='sm'>start</Button> : null;\n            const endBtn = !session.end ? <Button variant='outline-danger' size='sm'>end</Button> : null;\n            return ( <Col md='3' key={session._id}>\n                        <Accordion defaultActiveKey={ session._id }>\n                            <Card>\n                                <Card.Header>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey={ session._id}>\n                                {moment( session.created_at ).format('MMM Do YYYY')}\n                                </Accordion.Toggle>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey={ session._id}>\n                                <Card.Body>\n                                    <ul>\n                                        <li>{ session.weight } ( { session.weight_unit } )</li>\n                                        <li>{ displayTimes }</li>\n                                        <li><Button variant='link' href={ session.publicUrl }>link</Button></li>\n                                    </ul>\n                                    { startEndBtn }\n                                    <Button variant='outline-danger' size='sm' onClick={ () => this.deleteSessionHandler( session._id ) }>delete</Button>\n\n                                </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </Col>\n                );\n        });\n\n        return (\n            <Row>\n                <div className={classes.Sessions}>\n                    { sessionData }\n                </div>\n            </Row>\n        );\n    }\n};\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        token: state.signin.token,\n        view: state.workouts.view\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateWorkoutSession: data => dispatch( actions.updateWorkoutSession( data ) ),\n        onDeleteWorkoutSession: data => dispatch( actions.deleteWorkoutSession( data ) )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) ( WorkoutSessionList );\n"]},"metadata":{},"sourceType":"module"}