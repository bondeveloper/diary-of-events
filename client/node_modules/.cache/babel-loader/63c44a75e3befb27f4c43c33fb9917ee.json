{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { Col, Form, Button, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n\n    this.onCreateWorkoutHandler = form => {\n      this.setState({\n        validated: true\n      });\n      this.props.onCreateWorkout({\n        data: form,\n        token: this.props.token\n      });\n    };\n\n    this.onCancelCreateWorkoutHandler = () => {\n      alert(123); // this.props.onCancelCreateWorkout( );\n\n      this.props.history.push('/workouts');\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/workouts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  render() {\n    const btnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this) : 'submit';\n    const schema = yup.object({\n      name: yup.string().required(),\n      description: yup.string().required()\n    });\n    const form = this.props.view ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: this.onCreateWorkoutHandler,\n      onReset: this.onCancelCreateWorkoutSessionHandler,\n      initialValues: {\n        name: '',\n        description: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n        handleReset\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        onReset: handleReset,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: values.name,\n            onChange: handleChange,\n            isInvalid: !!errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            placeholder: \"Description\",\n            name: \"description\",\n            value: values.description,\n            onChange: handleChange,\n            isInvalid: !!errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: btnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"reset\",\n            disabled: this.props.loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n    return form;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.signin.token,\n    view: state.workouts.view,\n    redirect: state.workouts.redirect,\n    loading: state.workouts.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateWorkout: data => dispatch(actions.createWorkout(data)) // onCancelCreateWorkout: data => dispatch( actions.cancelCreateWorkout() ),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWorkout);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js"],"names":["React","Component","Aux","Col","Form","Button","Spinner","connect","Redirect","Formik","yup","classes","actions","CreateWorkout","state","validated","onCreateWorkoutHandler","form","setState","props","onCreateWorkout","data","token","onCancelCreateWorkoutHandler","alert","history","push","render","btnChild","loading","schema","object","name","string","required","description","view","redirect","onCancelCreateWorkoutSessionHandler","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","handleReset","Buttons","mapStateToProps","signin","workouts","mapDispatchToProps","dispatch","createWorkout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,OAA5B,QAA0C,iBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;;AAEA,MAAMC,aAAN,SAA4BZ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCa,KADkC,GAC1B;AACJC,MAAAA,SAAS,EAAE;AADP,KAD0B;;AAAA,SAKlCC,sBALkC,GAKTC,IAAI,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,WAAKI,KAAL,CAAWC,eAAX,CAA2B;AACvBC,QAAAA,IAAI,EAAEJ,IADiB;AAEvBK,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAFK,OAA3B;AAIH,KAXiC;;AAAA,SAYlCC,4BAZkC,GAYH,MAAM;AACjCC,MAAAA,KAAK,CAAC,GAAD,CAAL,CADiC,CAEjC;;AACA,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACA,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAjBiC;AAAA;;AAmBnCC,EAAAA,MAAM,GAAI;AACL,UAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWU,OAAX,gBACd,QAAC,GAAD;AAAA,8BACI,QAAC,OAAD;AACA,QAAA,EAAE,EAAC,MADH;AAEA,QAAA,SAAS,EAAC,MAFV;AAGA,QAAA,IAAI,EAAC,IAHL;AAIA,QAAA,IAAI,EAAC,QAJL;AAKA,uBAAY;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,GAWd,QAXH;AAaA,UAAMC,MAAM,GAAGpB,GAAG,CAACqB,MAAJ,CAAW;AACtBC,MAAAA,IAAI,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,QAAb,EADgB;AAEtBC,MAAAA,WAAW,EAAEzB,GAAG,CAACuB,MAAJ,GAAaC,QAAb;AAFS,KAAX,CAAf;AAKA,UAAMjB,IAAI,GAAG,KAAKE,KAAL,CAAWiB,IAAX,gBAAmB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKjB,KAAL,CAAWkB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAEL,QAAC,MAAD;AACI,MAAA,gBAAgB,EAAEP,MADtB;AAEI,MAAA,QAAQ,EAAE,KAAKd,sBAFnB;AAGI,MAAA,OAAO,EAAE,KAAKsB,mCAHlB;AAII,MAAA,aAAa,EAAE;AACXN,QAAAA,IAAI,EAAE,EADK;AAEXG,QAAAA,WAAW,EAAE;AAFF,OAJnB;AAAA,gBASK,CAAC;AACEI,QAAAA,YADF;AAEEC,QAAAA,YAFF;AAGEC,QAAAA,UAHF;AAIEC,QAAAA,MAJF;AAKEC,QAAAA,OALF;AAMEC,QAAAA,OANF;AAOEC,QAAAA,MAPF;AAQEC,QAAAA;AARF,OAAD,kBAUG,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEP,YAA3B;AAAyC,QAAA,OAAO,EAAEO,WAAlD;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE3C,GAAhB;AAAqB,UAAA,SAAS,EAAC,MAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAEuC,MAAM,CAACV,IAJhB;AAKE,YAAA,QAAQ,EAAEQ,YALZ;AAME,YAAA,SAAS,EAAE,CAAC,CAACK,MAAM,CAACb;AANtB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,YAAA,IAAI,EAAC,SAA5B;AAAA,sBACGa,MAAM,CAACb;AADV;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE7B,GAAhB;AAAqB,UAAA,SAAS,EAAC,aAA/B;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,IAAI,EAAE,CAFV;AAGI,YAAA,WAAW,EAAC,aAHhB;AAII,YAAA,IAAI,EAAC,aAJT;AAKI,YAAA,KAAK,EAAEuC,MAAM,CAACP,WALlB;AAMI,YAAA,QAAQ,EAAEK,YANd;AAOI,YAAA,SAAS,EAAE,CAAC,CAACK,MAAM,CAACV;AAPxB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAWM,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,YAAA,IAAI,EAAC,SAA5B;AAAA,sBACGU,MAAM,CAACV;AADV;AAAA;AAAA;AAAA;AAAA,kBAXN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA8BI;AAAK,UAAA,SAAS,EAAExB,OAAO,CAACoC,OAAxB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,IAAI,EAAC,QAA9B;AAAA,sBAAyCnB;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA,YAFR;AA2DA,WAAOZ,IAAP;AAGH;;AApGiC;;AAuGtC,MAAM+B,eAAe,GAAGlC,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,KAAK,EAAER,KAAK,CAACmC,MAAN,CAAa3B,KADjB;AAEHc,IAAAA,IAAI,EAAEtB,KAAK,CAACoC,QAAN,CAAed,IAFlB;AAGHC,IAAAA,QAAQ,EAAEvB,KAAK,CAACoC,QAAN,CAAeb,QAHtB;AAIHR,IAAAA,OAAO,EAAEf,KAAK,CAACoC,QAAN,CAAerB;AAJrB,GAAP;AAMH,CAPD;;AASA,MAAMsB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhC,IAAAA,eAAe,EAAEC,IAAI,IAAI+B,QAAQ,CAAExC,OAAO,CAACyC,aAAR,CAAuBhC,IAAvB,CAAF,CAD9B,CAEH;;AAFG,GAAP;AAIH,CALD;;AAOA,eAAed,OAAO,CAAEyC,eAAF,EAAmBG,kBAAnB,CAAP,CAAiDtC,aAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { Col, Form, Button, Spinner} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n    state = {\n        validated: false\n    }\n\n    onCreateWorkoutHandler = form => {\n        this.setState({ validated: true });\n        this.props.onCreateWorkout({\n            data: form,\n            token: this.props.token\n        });\n    }\n    onCancelCreateWorkoutHandler = () => {\n        alert(123);\n        // this.props.onCancelCreateWorkout( );\n        this.props.history.push('/workouts');\n        return <Redirect to='/workouts' />;\n    }\n\n   render () {\n        const btnChild = this.props.loading ? (\n           <Aux>\n               <Spinner\n               as=\"span\"\n               animation=\"grow\"\n               size=\"sm\"\n               role=\"status\"\n               aria-hidden=\"true\"\n               />\n               Loading...\n           </Aux>\n        ): 'submit';\n\n        const schema = yup.object({\n            name: yup.string().required(),\n            description: yup.string().required(),\n        });\n\n        const form = this.props.view ? (<Redirect to={this.props.redirect} />) : (\n\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.onCreateWorkoutHandler}\n                    onReset={this.onCancelCreateWorkoutSessionHandler}\n                    initialValues={{\n                        name: '',\n                        description: ''\n                    }}\n                >\n                    {({\n                        handleSubmit,\n                        handleChange,\n                        handleBlur,\n                        values,\n                        touched,\n                        isValid,\n                        errors,\n                        handleReset,\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit} onReset={handleReset}>\n                            <Form.Group as={Col} controlId=\"name\">\n                              <Form.Label>Name</Form.Label>\n                              <Form.Control\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                name=\"name\"\n                                value={values.name}\n                                onChange={handleChange}\n                                isInvalid={!!errors.name}\n                              />\n                              <Form.Control.Feedback type=\"invalid\">\n                                {errors.name}\n                              </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"description\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={3}\n                                    placeholder=\"Description\"\n                                    name=\"description\"\n                                    value={values.description}\n                                    onChange={handleChange}\n                                    isInvalid={!!errors.description}\n                                />\n                                  <Form.Control.Feedback type=\"invalid\">\n                                    {errors.description}\n                                  </Form.Control.Feedback>\n                            </Form.Group>\n                            <div className={classes.Buttons}>\n                                <Button variant='danger' type=\"submit\">{ btnChild }</Button>\n                                <Button variant='secondary' type=\"reset\" disabled={this.props.loading} >Cancel</Button>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            )\n        return form;\n\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.signin.token,\n        view: state.workouts.view,\n        redirect: state.workouts.redirect,\n        loading: state.workouts.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateWorkout: data => dispatch( actions.createWorkout( data ))\n        // onCancelCreateWorkout: data => dispatch( actions.cancelCreateWorkout() ),\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps ) ( CreateWorkout );\n"]},"metadata":{},"sourceType":"module"}