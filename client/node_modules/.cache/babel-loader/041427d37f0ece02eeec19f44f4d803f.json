{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickedHandler = (key, values) => {\n      console.log(222);\n      console.log(key);\n      console.log(values);\n      this.props.viewClicked(key);\n    };\n\n    this.renderTableData = (data, key) => {\n      console.log(data); // return data.map( values => {\n      //     let pk = values[key];\n      //     console.log(values);\n      //     console.log(data);\n      //     const tableData = Object.keys( excludeKeyFromObj( {...values}, key ) ).map( id => {\n      //         return (\n      //             <td key={id}>{ values[id] }</td>\n      //         )\n      //     });\n      //     return (\n      //         <tr key={ key + values[key] }>\n      //             {tableData}\n      //             <td key={'action' + key}>\n      //                 <Button variant='link' key={pk} onClick={ () => this.onClickedHandler( key, pk ) }>view</Button>\n      //             </td>\n      //         </tr>\n      //     );\n      // });\n    };\n\n    this.renderTableColumnNames = (data, key) => {\n      console.log(data); // return data.slice(0,1).map( values => {\n      //     const tableColumnNames = Object.keys( excludeKeyFromObj( values, key ) ).map( key => {\n      //         return (\n      //             <th key={key}>{ transformUnderscoreCaseToSentenceCase( key ) }</th>\n      //             )\n      //         });\n      //     return (\n      //         <tr key={ key + values[key] }>\n      //             {tableColumnNames}\n      //             <th key={'action' + values[key]}></th>\n      //         </tr>\n      //     );\n      // });\n    };\n  }\n\n  render() {\n    const table = this.props.data && this.props.data.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: this.renderTableColumnNames([...this.props.data], this.props.keyValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderTableData([...this.props.data], this.props.keyValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Nothing to display!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Table,\n      children: [this.props.tableHeader, table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomTable;","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/UI/Table/Table.js"],"names":["React","Component","Table","Button","transformUnderscoreCaseToSentenceCase","excludeKeyFromObj","classes","CustomTable","onClickedHandler","key","values","console","log","props","viewClicked","renderTableData","data","renderTableColumnNames","render","table","length","keyValue","tableHeader"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,qCAAT,EAAgDC,iBAAhD,QAAyE,yBAAzE;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEhCO,gBAFgC,GAEb,CAACC,GAAD,EAAKC,MAAL,KAAiB;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,KAAL,CAAWC,WAAX,CAAwBL,GAAxB;AACH,KAP+B;;AAAA,SAShCM,eATgC,GASd,CAACC,IAAD,EAAOP,GAAP,KAAe;AAC7BE,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAD6B,CAE7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA9B+B;;AAAA,SAgChCC,sBAhCgC,GAgCP,CAACD,IAAD,EAAOP,GAAP,KAAe;AACpCE,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EADoC,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA/C+B;AAAA;;AAiDhCE,EAAAA,MAAM,GAAI;AAEN,UAAMC,KAAK,GAAG,KAAKN,KAAL,CAAWG,IAAX,IAAmB,KAAKH,KAAL,CAAWG,IAAX,CAAgBI,MAAhB,GAAyB,CAA5C,gBACV,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,UAAU,EAAC,IAAzC;AAAA,8BACI;AAAA,kBACK,KAAKH,sBAAL,CAA4B,CAAC,GAAG,KAAKJ,KAAL,CAAWG,IAAf,CAA5B,EAAkD,KAAKH,KAAL,CAAWQ,QAA7D;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACK,KAAKN,eAAL,CAAqB,CAAC,GAAG,KAAKF,KAAL,CAAWG,IAAf,CAArB,EAA2C,KAAKH,KAAL,CAAWQ,QAAtD;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBASV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAWA,wBACI;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACJ,KAAxB;AAAA,iBACK,KAAKW,KAAL,CAAWS,WADhB,EAEKH,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApE+B;;AAwEpC,eAAeZ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nimport { transformUnderscoreCaseToSentenceCase, excludeKeyFromObj } from '../../../shared/utility';\n\nimport classes from './Table.module.css';\n\nclass CustomTable extends Component {\n\n    onClickedHandler = (key,values ) => {\n        console.log(222);\n        console.log(key);\n        console.log(values);\n        this.props.viewClicked( key );\n    }\n\n    renderTableData = (data, key) => {\n        console.log(data);\n        // return data.map( values => {\n        //     let pk = values[key];\n        //     console.log(values);\n        //     console.log(data);\n\n        //     const tableData = Object.keys( excludeKeyFromObj( {...values}, key ) ).map( id => {\n        //         return (\n        //             <td key={id}>{ values[id] }</td>\n        //         )\n        //     });\n        //     return (\n        //         <tr key={ key + values[key] }>\n        //             {tableData}\n        //             <td key={'action' + key}>\n        //                 <Button variant='link' key={pk} onClick={ () => this.onClickedHandler( key, pk ) }>view</Button>\n        //             </td>\n        //         </tr>\n        //     );\n        // });\n    };\n    \n    renderTableColumnNames = (data, key) => {\n        console.log(data);\n        // return data.slice(0,1).map( values => {\n        //     const tableColumnNames = Object.keys( excludeKeyFromObj( values, key ) ).map( key => {\n        //         return (\n        //             <th key={key}>{ transformUnderscoreCaseToSentenceCase( key ) }</th>\n        //             )\n        //         });\n        //     return (\n        //         <tr key={ key + values[key] }>\n        //             {tableColumnNames}\n        //             <th key={'action' + values[key]}></th>\n        //         </tr>\n        //     );\n        // });\n    }\n\n    render () {\n             \n        const table = this.props.data && this.props.data.length > 0 ? (\n            <Table striped bordered hover responsive=\"sm\">\n                <thead>\n                    {this.renderTableColumnNames([...this.props.data], this.props.keyValue)}\n                </thead>\n                <tbody>\n                    {this.renderTableData([...this.props.data], this.props.keyValue)}\n                </tbody>\n            </Table>\n        ) : <span>Nothing to display!</span>\n\n        return (\n            <div className={classes.Table}>\n                {this.props.tableHeader}\n                {table}\n            </div>\n        );\n    }\n}\n\n\nexport default CustomTable;"]},"metadata":{},"sourceType":"module"}