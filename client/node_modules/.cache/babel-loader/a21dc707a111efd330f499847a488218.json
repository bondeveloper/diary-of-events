{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        email: {\n          type: 'input',\n          config: {\n            type: 'email',\n            placeholder: 'email'\n          }\n        },\n        password: {\n          type: 'input',\n          config: {\n            type: 'password',\n            placeholder: 'password'\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    console.log(props.isAuth);\n    let form = [];\n\n    for (let key in this.state.form) {\n      form.push({\n        id: key,\n        settings: this.state.form[key]\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"input\",\n          label: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js"],"names":["React","connect","actions","Input","Signup","Component","state","form","email","type","config","placeholder","password","render","console","log","props","isAuth","key","push","id","settings","mapStateToProps","signin","token","mapDispatchToProps","dispatch","onSignup","data","signup"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,MAAMC,MAAN,SAAqBC,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BC,KAD2B,GACnB;AACJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,OADH;AAEHC,UAAAA,MAAM,EAAE;AACJD,YAAAA,IAAI,EAAE,OADF;AAEJE,YAAAA,WAAW,EAAE;AAFT;AAFL,SADL;AAQFC,QAAAA,QAAQ,EAAE;AACNH,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,MAAM,EAAE;AACJD,YAAAA,IAAI,EAAE,UADF;AAEJE,YAAAA,WAAW,EAAE;AAFT;AAFF;AARR;AADF,KADmB;AAAA;;AAmB3BE,EAAAA,MAAM,GAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,MAAlB;AACA,QAAIV,IAAI,GAAG,EAAX;;AACA,SAAM,IAAIW,GAAV,IAAiB,KAAKZ,KAAL,CAAWC,IAA5B,EAAkC;AAC9BA,MAAAA,IAAI,CAACY,IAAL,CAAU;AACNC,QAAAA,EAAE,EAAEF,GADE;AAENG,QAAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWC,IAAX,CAAgBW,GAAhB;AAFJ,OAAV;AAIH;;AAED,wBACI;AAAA,6BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApC0B;;AAqC9B;;AAED,MAAMI,eAAe,GAAGhB,KAAK,IAAI;AAC7B,SAAO;AACHW,IAAAA,MAAM,EAAEX,KAAK,CAACiB,MAAN,CAAaC,KAAb,KAAuB;AAD5B,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,QAAQ,EAAEC,IAAI,IAAIF,QAAQ,CAAExB,OAAO,CAAC2B,MAAR,CAAgBD,IAAhB,CAAF;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAe3B,OAAO,CAAEqB,eAAF,EAAmBG,kBAAnB,CAAP,CAA+CI,MAA/C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\n\nclass Signup extends Component {\n    state = {\n        form: {\n            email: {\n                type: 'input',\n                config: {\n                    type: 'email',\n                    placeholder: 'email'\n                }\n            },\n            password: {\n                type: 'input',\n                config: {\n                    type: 'password',\n                    placeholder: 'password'\n                }\n            }\n        }\n    }\n    render () {\n        console.log(props.isAuth);\n        let form = [];\n        for ( let key in this.state.form) {\n            form.push({\n                id: key,\n                settings: this.state.form[key]\n            })\n        }\n\n        return (\n            <div>\n                <form>\n                    <Input type='input' label=\"\"/>\n                </form>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) )\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( signup );"]},"metadata":{},"sourceType":"module"}