{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as actions from '../../../store/actions/index';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged } from '../../../shared/form-utility';\nimport classes from './Signup.module.css';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Aux from '../../../hoc/Aux/Aux';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n\n    this.onSignupHandler = async form => {\n      await this.props.onSignin(form);\n      this.props.history.push(this.props.redirect);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.onCancelSignupHandler = () => {\n      this.props.onCancelSignup();\n    };\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => {\n        const error = 'path' in err && err.path.length > 0 && err.path[0] === 'repeat_password' ? 'Password must match!' : err.message;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [error, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 60\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this) : null;\n    const signupBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this) : 'Signup';\n    const schema = yup.object({\n      email: yup.string().required().email(),\n      password: yup.string().required(),\n      repeat_password: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match!')\n    });\n    return (\n      /*#__PURE__*/\n      // <div className={classes.Signup}>\n      //     { errors }\n      //     <Form>\n      //         {form}\n      //         <div className={classes.Buttons}>\n      //             <Button variant='danger' onClick={this.onSignupHandler}>{ signupBtnChild }</Button>\n      //             <Button variant='secondary' disabled={this.props.loading} onClick={this.onCancelSignupHandler}>Cancel</Button>\n      //         </div>\n      //     </Form>\n      // </div>\n      _jsxDEV(Formik, {\n        validationSchema: schema,\n        onSubmit: this.onSignupHandler,\n        initialValues: {\n          email: '',\n          password: '',\n          repeat_password: ''\n        },\n        children: ({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Email\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              isInvalid: !!errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              isInvalid: !!errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"repeat_password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"repeat_password\",\n              placeholder: \"confirm password\",\n              name: \"repeat_password\",\n              value: values.repeat_password,\n              onChange: handleChange,\n              isInvalid: !!errors.repeat_password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.repeat_password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Buttons,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              type: \"submit\",\n              children: signupBtnChild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              disabled: this.props.loading,\n              onClick: this.onCancelSignupHandler,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null,\n    errors: state.signup.errors,\n    redirect: state.signup.redirect,\n    loading: state.signup.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data)),\n    onCancelSignup: () => dispatch(actions.signupCancel())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js"],"names":["React","Component","connect","Button","Col","Formik","yup","actions","formObjectToArray","mapKeyToValue","signupForm","formInputChanged","classes","Form","Alert","Spinner","Redirect","Aux","Signup","state","validated","onSignupHandler","form","props","onSignin","history","push","redirect","onCancelSignupHandler","onCancelSignup","render","errors","length","map","err","key","error","path","message","signupBtnChild","loading","schema","object","email","string","required","password","repeat_password","oneOf","ref","handleSubmit","handleChange","handleBlur","values","touched","isValid","Buttons","mapStateToProps","console","log","isAuth","signin","token","signup","mapDispatchToProps","dispatch","onSignup","data","signupCancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col} from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport * as actions from '../../../store/actions/index';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport { signupForm, formInputChanged} from '../../../shared/form-utility';\n\nimport classes from './Signup.module.css';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Aux from '../../../hoc/Aux/Aux';\n\nclass Signup extends Component {\n    state = {\n        validated: false\n    }\n\n    onSignupHandler = async ( form ) => {\n        await this.props.onSignin( form );\n\n        this.props.history.push( this.props.redirect );\n        return <Redirect to={ this.props.redirect} />;\n    }\n\n    onCancelSignupHandler = () => {\n        this.props.onCancelSignup();\n    }\n\n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => {\n                        const error = 'path' in err && err.path.length > 0 && err.path[0] === 'repeat_password' ? 'Password must match!':   err.message;\n                        return <span key={ key }>{ error } <br/></span>\n                    })\n                }\n            </Alert>\n        ): null;\n\n        const signupBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        const schema = yup.object({\n            email: yup.string().required().email(),\n            password: yup.string().required(),\n            repeat_password: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match!'),\n        });\n\n        return (\n            // <div className={classes.Signup}>\n            //     { errors }\n            //     <Form>\n            //         {form}\n            //         <div className={classes.Buttons}>\n            //             <Button variant='danger' onClick={this.onSignupHandler}>{ signupBtnChild }</Button>\n            //             <Button variant='secondary' disabled={this.props.loading} onClick={this.onCancelSignupHandler}>Cancel</Button>\n            //         </div>\n            //     </Form>\n            // </div>\n            <Formik\n                validationSchema={schema}\n                onSubmit={this.onSignupHandler}\n                initialValues={{\n                    email: '',\n                    password: '',\n                    repeat_password: ''\n                }}\n            >\n            {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n            }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group as={Col} controlId=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    isInvalid={!!errors.email}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        isInvalid={!!errors.password}\n                    />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.password}\n                      </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"repeat_password\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"repeat_password\"\n                        placeholder=\"confirm password\"\n                        name=\"repeat_password\"\n                        value={values.repeat_password}\n                        onChange={handleChange}\n                        isInvalid={!!errors.repeat_password}\n                    />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.repeat_password}\n                      </Form.Control.Feedback>\n                </Form.Group>\n                <div className={classes.Buttons}>\n                    <Button variant='danger' type=\"submit\">{ signupBtnChild }</Button>\n                    <Button variant='secondary' disabled={this.props.loading} onClick={this.onCancelSignupHandler}>Cancel</Button>\n                </div>\n            </Form>\n          )}\n        </Formik>);\n    }\n};\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        isAuth: state.signin.token !== null,\n        errors: state.signup.errors,\n        redirect: state.signup.redirect,\n        loading: state.signup.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) ),\n        onCancelSignup: () => dispatch ( actions.signupCancel () ),\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( Signup );\n"]},"metadata":{},"sourceType":"module"}