{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/client/src/components/Auth/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../../../store/actions/index';\nimport classes from './Signup.module.css';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Aux from '../../../hoc/Aux/Aux';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false,\n      showPassword: false\n    };\n\n    this.onSignupHandler = form => {\n      this.setState({\n        validated: true\n      });\n      this.props.onSignup(form);\n      this.props.history.push(this.props.redirect);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this);\n    };\n\n    this.onCancelSignupHandler = () => {\n      this.props.onCancelSignup();\n    };\n\n    this.onShowPasswordToggle = () => this.setState({\n      showPassword: !this.state.showPassword\n    });\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => {\n        const error = 'path' in err && err.path.length > 0 && err.path[0] === 'repeat_password' ? 'Password must match!' : err.message;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [error, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 60\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) : null;\n    const signupBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this) : 'Signup';\n    const schema = yup.object({// email: yup.string().required('Email is required!').email('Please enter a valid Email!'),\n      // password: yup.string().required('Password is required!').matches(\n      //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n      //     'Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character'\n      // ),\n      // repeat_password: yup.string().required('Please confirm password!').oneOf([yup.ref('password'), null], 'Passwords must match!'),\n    });\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: this.onSignupHandler,\n      initialValues: {\n        email: '',\n        password: '',\n        repeat_password: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Email\",\n            name: \"email\",\n            value: values.email,\n            onChange: handleChange,\n            isInvalid: !!errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            isInvalid: !!errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"repeat_password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"confirm password\",\n            name: \"repeat_password\",\n            value: values.repeat_password,\n            onChange: handleChange,\n            isInvalid: !!errors.repeat_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.repeat_password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: signupBtnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            disabled: this.props.loading,\n            onClick: this.onCancelSignupHandler,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null,\n    errors: state.signup.errors,\n    redirect: state.signup.redirect,\n    loading: state.signup.loading,\n    toast: state.signup.toast\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data)),\n    onCancelSignup: () => dispatch(actions.signupCancel())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/client/src/components/Auth/Signup/Signup.js"],"names":["React","Component","connect","Button","Col","Formik","yup","FontAwesomeIcon","actions","classes","Form","Alert","Spinner","Redirect","Aux","Signup","state","validated","showPassword","onSignupHandler","form","setState","props","onSignup","history","push","redirect","onCancelSignupHandler","onCancelSignup","onShowPasswordToggle","render","errors","length","map","err","key","error","path","message","signupBtnChild","loading","schema","object","email","password","repeat_password","handleSubmit","handleChange","handleBlur","values","touched","isValid","Buttons","mapStateToProps","isAuth","signin","token","signup","toast","mapDispatchToProps","dispatch","data","signupCancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col} from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as actions from '../../../store/actions/index';\n\nimport classes from './Signup.module.css';\nimport { Form, Alert, Spinner } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Aux from '../../../hoc/Aux/Aux';\n\nclass Signup extends Component {\n    state = {\n        validated: false,\n        showPassword: false\n    }\n\n    onSignupHandler =  form => {\n        this.setState({ validated: true });\n        this.props.onSignup( form );\n\n        this.props.history.push( this.props.redirect );\n        return <Redirect to={ this.props.redirect} />;\n    }\n\n    onCancelSignupHandler = () => {\n        this.props.onCancelSignup();\n    }\n\n    onShowPasswordToggle = () => this.setState({ showPassword: !this.state.showPassword});\n    \n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => {\n                        const error = 'path' in err && err.path.length > 0 && err.path[0] === 'repeat_password' ? 'Password must match!':   err.message;\n                        return <span key={ key }>{ error } <br/></span>\n                    })\n                }\n            </Alert>\n        ): null;\n\n        const signupBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        const schema = yup.object({\n            // email: yup.string().required('Email is required!').email('Please enter a valid Email!'),\n            // password: yup.string().required('Password is required!').matches(\n            //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n            //     'Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character'\n            // ),\n            // repeat_password: yup.string().required('Please confirm password!').oneOf([yup.ref('password'), null], 'Passwords must match!'),\n        });\n\n        return (\n            <Formik\n                validationSchema={schema}\n                onSubmit={this.onSignupHandler}\n                initialValues={{\n                    email: '',\n                    password: '',\n                    repeat_password: ''\n                }}\n            >\n            {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n            }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group as={Col} controlId=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    isInvalid={!!errors.email}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        isInvalid={!!errors.password}\n                    />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.password}\n                      </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"repeat_password\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"confirm password\"\n                        name=\"repeat_password\"\n                        value={values.repeat_password}\n                        onChange={handleChange}\n                        isInvalid={!!errors.repeat_password}\n                    />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.repeat_password}\n                      </Form.Control.Feedback>\n                </Form.Group>\n                <div className={classes.Buttons}>\n                    <Button variant='danger' type=\"submit\">{ signupBtnChild }</Button>\n                    <Button variant='secondary' disabled={this.props.loading} onClick={this.onCancelSignupHandler}>Cancel</Button>\n                </div>\n            </Form>\n          )}\n        </Formik>);\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null,\n        errors: state.signup.errors,\n        redirect: state.signup.redirect,\n        loading: state.signup.loading,\n        toast: state.signup.toast\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) ),\n        onCancelSignup: () => dispatch ( actions.signupCancel () ),\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( Signup );\n"]},"metadata":{},"sourceType":"module"}