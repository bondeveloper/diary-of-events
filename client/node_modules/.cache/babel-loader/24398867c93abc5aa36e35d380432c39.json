{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/Create/Create.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport classes from './Create.module.css';\nimport { workoutSessionForm, formInputChanged } from '../../../../../../shared/form-utility';\nimport { formObjectToArray } from '../../../../../../shared/utility';\nimport Aux from '../../../../../../hoc/Aux/Aux';\nimport { connect } from 'mongoose';\n\nclass WorkoutSessionCreate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: workoutSessionForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onCreateWorkoutSessionHandler = event => {\n      console.log(123123);\n      this.props.onCreateWorkoutSession(this.state.form);\n    };\n  }\n\n  render() {\n    let form = formObjectToArray(this.state.form).map(ele => {\n      let formElements = null;\n\n      switch (ele.settings.type) {\n        case 'input':\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              className: \"my-1\",\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\" \", ele.settings.label, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: ele.settings.type,\n                id: ele.key,\n                placeholder: ele.settings.config.placeholder,\n                onChange: event => this.inputChangedHandler(event, ele.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this);\n          break;\n\n        case 'select':\n          const optionsData = ele.settings.config.options;\n          const options = Object.keys(optionsData).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: [\" \", optionsData[key]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this);\n          });\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: \"unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Choose...\",\n                id: ele.key,\n                onChange: event => this.inputChangedHandler(event, ele.key),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: [\" \", ele.settings.config.placeholder, \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), options]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this);\n          break;\n\n        default:\n          console.log(ele.settings.type);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"align-items-center\",\n        children: formElements\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Create,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [form, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: this.onCreateWorkoutSessionHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateWorkoutSession: data => dispatch(createWorkoutSession(data))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(WorkoutSessionCreate);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/Create/Create.js"],"names":["React","Component","Form","Col","Button","classes","workoutSessionForm","formInputChanged","formObjectToArray","Aux","connect","WorkoutSessionCreate","state","form","inputChangedHandler","event","key","setState","onCreateWorkoutSessionHandler","console","log","props","onCreateWorkoutSession","render","map","ele","formElements","settings","type","label","config","placeholder","optionsData","options","Object","keys","Create","mapDispatchToProps","dispatch","data","createWorkoutSession"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport classes from './Create.module.css';\n\nimport { workoutSessionForm, formInputChanged } from '../../../../../../shared/form-utility';\nimport { formObjectToArray } from '../../../../../../shared/utility';\nimport Aux from '../../../../../../hoc/Aux/Aux';\nimport { connect } from 'mongoose';\n\nclass WorkoutSessionCreate extends Component {\n    state = {\n        form: workoutSessionForm\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key ) });\n    }\n\n    onCreateWorkoutSessionHandler = event => {\n        console.log(123123);\n        this.props.onCreateWorkoutSession ( this.state.form );\n    } \n\n    render () {\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            let formElements = null;\n\n            switch ( ele.settings.type ) {\n                case 'input' :\n                    formElements = (\n                        <Aux>\n                            <Col xs=\"auto\" className=\"my-1\">\n                                <Form.Label> { ele.settings.label } </Form.Label>\n                            </Col>\n                            <Col sm={6} className=\"my-1\">\n                                <Form.Label htmlFor={ele.key} srOnly>\n                                { label }\n                                </Form.Label>\n                                <Form.Control \n                                    type={ ele.settings.type }\n                                    id={ele.key}\n                                    placeholder={ ele.settings.config.placeholder }\n                                    onChange={ event => this.inputChangedHandler( event, ele.key ) }/>\n                            </Col>\n                        </Aux>\n                    );\n                    break;\n                case 'select' :\n                    const optionsData = ele.settings.config.options;\n                    const options = Object.keys( optionsData ).map( key => {\n                        return (\n                            <option value={ key }> { optionsData[key] }</option>\n                        )\n                    });\n                    formElements = (\n                        <Aux>\n                            <Col sm={4} className=\"my-1\">\n                                <Form.Label htmlFor={ele.key} srOnly>\n                                    unit\n                                </Form.Label>\n                                <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\" \n                                    id={ ele.key }\n                                    onChange={ event => this.inputChangedHandler( event, ele.key )} >\n                                    <option> { ele.settings.config.placeholder }...</option>\n                                    { options }\n                                </Form.Control>\n                            </Col>\n                        </Aux>\n                    );\n                    break;\n                default:\n                    console.log( ele.settings.type );\n            }\n\n            return (\n                <Form.Row className=\"align-items-center\" key={ ele.key }>\n                    { formElements }                 \n                </Form.Row>\n            );\n        });\n\n        return (\n        <div className={classes.Create}>\n            <Form>\n                { form }\n                <Button variant='danger' onClick={this.onCreateWorkoutSessionHandler}>\n                    Submit\n                </Button>\n            </Form>\n        </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateWorkoutSession: data => dispatch( createWorkoutSession( data ))\n    };\n};\n\n\nexport default connect( null , mapDispatchToProps) ( WorkoutSessionCreate );"]},"metadata":{},"sourceType":"module"}