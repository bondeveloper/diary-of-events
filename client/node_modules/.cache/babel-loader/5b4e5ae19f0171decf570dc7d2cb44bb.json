{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\nimport classes from './Signup.module.css';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        email: {\n          type: 'input',\n          config: {\n            type: 'email',\n            placeholder: 'email'\n          },\n          value: '',\n          label: 'Email'\n        },\n        password: {\n          type: 'input',\n          config: {\n            type: 'password',\n            placeholder: 'password'\n          },\n          value: '',\n          label: 'Password'\n        }\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.isAuth);\n    let formElements = [];\n\n    for (let key in this.state.form) {\n      formElements.push({\n        key: key,\n        settings: this.state.form[key]\n      });\n    }\n\n    console.log(formElements);\n    let form = formElements.map(ele => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: ele.settings.type,\n        config: ele.settings.config,\n        value: ele.settings.value,\n        label: ele.settings.label\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"Success\",\n            clicked: this.onSignupHandler,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"Cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignup: data => dispatch(actions.signup(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signup/Signup.js"],"names":["React","Component","connect","actions","Input","Button","classes","Signup","state","form","email","type","config","placeholder","value","label","password","render","console","log","props","isAuth","formElements","key","push","settings","map","ele","Buttons","onSignupHandler","mapStateToProps","signin","token","mapDispatchToProps","dispatch","onSignup","data","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './Signup.module.css';\n\nclass Signup extends Component {\n    state = {\n        form: {\n            email: {\n                type: 'input',\n                config: {\n                    type: 'email',\n                    placeholder: 'email'\n                },\n                value: '',\n                label: 'Email'\n            },\n            password: {\n                type: 'input',\n                config: {\n                    type: 'password',\n                    placeholder: 'password'\n                },\n                value: '',\n                label: 'Password'\n            }\n        }\n    }\n    render () {\n        console.log(this.props.isAuth);\n        let formElements = [];\n        for ( let key in this.state.form) {\n            formElements.push({\n                key: key,\n                settings: this.state.form[key]\n            })\n        }\n\n        console.log(formElements);\n\n        let form = formElements.map( ele => {\n            return <Input\n                key={ele.key}\n                type={ele.settings.type}\n                config={ele.settings.config}\n                value={ele.settings.value}\n                label={ele.settings.label}\n                />\n\n        });\n\n\n        return (\n            <div>\n                <form>\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button type='Success' clicked={this.onSignupHandler}>Signup</Button>\n                        <Button type='Cancel'>Cancel</Button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: data => dispatch( actions.signup( data ) )\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps)( Signup );"]},"metadata":{},"sourceType":"module"}