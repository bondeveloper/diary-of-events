{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner, Col, InputGroup } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport classes from './Signin.module.css';\nimport { signinForm, formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signinForm,\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = event => {\n      const form = event.currentTarget;\n      console.log(form);\n\n      if (form.checkValidity() == false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.setState({\n        validated: true\n      }); // this.props.onSignin( mapKeyToValue( this.state.form ));\n      // return <Redirect to={ this.props.redirect} />;\n    };\n  }\n\n  componentDidMount() {\n    this.props.onCheckAuth();\n\n    if (this.props.isAuth) {\n      this.props.history.push(this.props.redirect);\n      return;\n    }\n\n    this.props.onSigninShow();\n  }\n\n  render() {\n    const errors = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: this.props.errors.map((err, key) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [err.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 94\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 60\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : null;\n    let form = formObjectToArray(this.state.form).map(ele => {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: ele.settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: ele.settings.config.required,\n          type: ele.settings.config.type,\n          placeholder: ele.settings.config.placeholder,\n          onChange: event => this.inputChangedHandler(event, ele.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \" Field is required. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    });\n    let redirect = this.props.isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 44\n    }, this) : null;\n    const signinBtnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : 'Signup';\n    const schema = yup.object({\n      email: yup.string().required('Email is requried').email('Invalid email'),\n      password: yup.string().required('Passord is required')\n    });\n    return (\n      /*#__PURE__*/\n      //     <div className={classes.Signin}>\n      //         {errors}\n      //         <Form noValidate validated={this.state.validated} className={classes.Form} onSubmit={this.onSigninHandler}>\n      //             {redirect}\n      //             <Form.Group controlId=\"email\">\n      //                 <Form.Label>Email</Form.Label>\n      //                 <Form.Control\n      //                     required\n      //                     type=\"text\"\n      //                     placeholder=\"Email\"\n      //                 />\n      //               <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n      //             </Form.Group>\n      //             <Form.Group controlId=\"password\">\n      //                 <Form.Label>Password</Form.Label>\n      //                 <Form.Control\n      //                     type=\"text\"\n      //                     placeholder=\"Username\"\n      //                     aria-describedby=\"inputGroupPrepend\"\n      //                     required\n      //                 />\n      //                 <Form.Control.Feedback type=\"invalid\">\n      //                     Please enter a valid password\n      //                 </Form.Control.Feedback>\n      //             </Form.Group>\n      //             <div className={classes.Buttons}>\n      //                 <Button variant='danger' type=\"submit\">{ signinBtnChild }</Button>\n      //                 {/* <Button variant='secondary' disabled={this.props.loading}>Cancel</Button> */}\n      //             </div>\n      //         </Form>\n      //     </div>\n      // );\n      _jsxDEV(Formik, {\n        validationSchema: schema,\n        onSubmit: console.log,\n        initialValues: {\n          firstName: 'Mark',\n          lastName: 'Otto'\n        },\n        children: ({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isValid,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"4\",\n              controlId: \"validationFormik01\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"firstName\",\n                value: values.firstName,\n                onChange: handleChange,\n                isValid: touched.firstName && !errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                children: \"Looks good!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"4\",\n              controlId: \"validationFormik02\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"lastName\",\n                value: values.lastName,\n                onChange: handleChange,\n                isValid: touched.lastName && !errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                children: \"Looks good!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"4\",\n              controlId: \"validationFormikUsername\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"inputGroupPrepend\",\n                    children: \"@\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Username\",\n                  \"aria-describedby\": \"inputGroupPrepend\",\n                  name: \"username\",\n                  value: values.username,\n                  onChange: handleChange,\n                  isInvalid: !!errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"validationFormik03\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"City\",\n                name: \"city\",\n                value: values.city,\n                onChange: handleChange,\n                isInvalid: !!errors.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"3\",\n              controlId: \"validationFormik04\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"State\",\n                name: \"state\",\n                value: values.state,\n                onChange: handleChange,\n                isInvalid: !!errors.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"3\",\n              controlId: \"validationFormik05\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Zip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Zip\",\n                name: \"zip\",\n                value: values.zip,\n                onChange: handleChange,\n                isInvalid: !!errors.zip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.zip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              required: true,\n              name: \"terms\",\n              label: \"Agree to terms and conditions\",\n              onChange: handleChange,\n              isInvalid: !!errors.terms,\n              feedback: errors.terms,\n              id: \"validationFormik0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuth: state.signin.token !== null,\n    redirect: state.signin.redirect,\n    errors: state.signin.errors,\n    loading: state.signin.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data)),\n    onSigninShow: () => dispatch(actions.showSignin()),\n    onCheckAuth: () => dispatch(actions.checkSignedIn())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","Redirect","Form","Alert","Button","Spinner","Col","InputGroup","Formik","yup","classes","signinForm","formInputChanged","formObjectToArray","mapKeyToValue","Aux","actions","Signin","state","form","validated","inputChangedHandler","event","key","setState","onSigninHandler","currentTarget","console","log","checkValidity","preventDefault","stopPropagation","componentDidMount","props","onCheckAuth","isAuth","history","push","redirect","onSigninShow","render","errors","length","map","err","message","ele","settings","label","config","required","type","placeholder","signinBtnChild","loading","schema","object","email","string","password","firstName","lastName","handleSubmit","handleChange","handleBlur","values","touched","isValid","username","city","zip","terms","mapStateToProps","signin","token","mapDispatchToProps","dispatch","onSignin","data","showSignin","checkSignedIn"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Alert, Button, Spinner, Col, InputGroup } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport classes from './Signin.module.css';\n\nimport { signinForm, formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Aux from '../../../hoc/Aux/Aux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n    state = {\n        form: signinForm,\n        validated: false\n    }\n\n    componentDidMount () {\n        this.props.onCheckAuth();\n        if ( this.props.isAuth ) {\n            this.props.history.push(this.props.redirect);\n            return;\n        }\n        this.props.onSigninShow();\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSigninHandler = event => {\n        const form = event.currentTarget;\n        console.log(form);\n\n        if ( form.checkValidity() == false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({ validated: true });\n        // this.props.onSignin( mapKeyToValue( this.state.form ));\n        // return <Redirect to={ this.props.redirect} />;\n    }\n\n    render () {\n        const errors = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                {\n                    this.props.errors.map( ( err, key ) => <span key={ key }>{ err.message } <br/></span>)\n                }\n            </Alert>\n        ): null;\n\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            return (\n                <Form.Group as={Col} controlId={ele.key} key={ele.key}>\n                    <Form.Label>{ ele.settings.label }</Form.Label>\n                    <Form.Control\n                        required={ ele.settings.config.required }\n                        type={ ele.settings.config.type }\n                        placeholder={ ele.settings.config.placeholder}\n                        onChange={ event => this.inputChangedHandler( event, ele.key)}/>\n                    <Form.Control.Feedback type=\"invalid\"> Field is required. </Form.Control.Feedback>\n                </Form.Group>\n            );\n\n        });\n\n        let redirect = this.props.isAuth ? <Redirect to={this.props.redirect} /> : null;\n\n        const signinBtnChild = this.props.loading ? (\n            <Aux>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Loading...\n            </Aux>\n        ): 'Signup';\n\n        const schema = yup.object({\n            email: yup.string().required('Email is requried').email('Invalid email'),\n            password: yup.string().required('Passord is required'),\n        });\n\n        return (\n        //     <div className={classes.Signin}>\n        //         {errors}\n        //         <Form noValidate validated={this.state.validated} className={classes.Form} onSubmit={this.onSigninHandler}>\n        //             {redirect}\n        //             <Form.Group controlId=\"email\">\n        //                 <Form.Label>Email</Form.Label>\n        //                 <Form.Control\n        //                     required\n        //                     type=\"text\"\n        //                     placeholder=\"Email\"\n        //                 />\n        //               <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        //             </Form.Group>\n        //             <Form.Group controlId=\"password\">\n        //                 <Form.Label>Password</Form.Label>\n        //                 <Form.Control\n        //                     type=\"text\"\n        //                     placeholder=\"Username\"\n        //                     aria-describedby=\"inputGroupPrepend\"\n        //                     required\n        //                 />\n        //                 <Form.Control.Feedback type=\"invalid\">\n        //                     Please enter a valid password\n        //                 </Form.Control.Feedback>\n        //             </Form.Group>\n        //             <div className={classes.Buttons}>\n        //                 <Button variant='danger' type=\"submit\">{ signinBtnChild }</Button>\n        //                 {/* <Button variant='secondary' disabled={this.props.loading}>Cancel</Button> */}\n        //             </div>\n        //         </Form>\n        //     </div>\n        // );\n        <Formik\n            validationSchema={schema}\n            onSubmit={console.log}\n            initialValues={{\n            firstName: 'Mark',\n            lastName: 'Otto',\n            }}\n        >\n        {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n        }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"firstName\"\n                value={values.firstName}\n                onChange={handleChange}\n                isValid={touched.firstName && !errors.firstName}\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"lastName\"\n                value={values.lastName}\n                onChange={handleChange}\n                isValid={touched.lastName && !errors.lastName}\n              />\n\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\n              <Form.Label>Username</Form.Label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"username\"\n                  value={values.username}\n                  onChange={handleChange}\n                  isInvalid={!!errors.username}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                value={values.city}\n                onChange={handleChange}\n                isInvalid={!!errors.city}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.city}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"State\"\n                name=\"state\"\n                value={values.state}\n                onChange={handleChange}\n                isInvalid={!!errors.state}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.state}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Zip\"\n                name=\"zip\"\n                value={values.zip}\n                onChange={handleChange}\n                isInvalid={!!errors.zip}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.zip}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.Check\n              required\n              name=\"terms\"\n              label=\"Agree to terms and conditions\"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n              id=\"validationFormik0\"\n            />\n          </Form.Group>\n          <Button type=\"submit\">Submit form</Button>\n        </Form>\n      )}\n    </Formik>);\n    };\n};\n\nconst mapStateToProps = state => {\n    console.log( state );\n    return {\n        isAuth: state.signin.token !== null,\n        redirect: state.signin.redirect,\n        errors: state.signin.errors,\n        loading: state.signin.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) ),\n        onSigninShow: () => dispatch( actions.showSignin() ),\n        onCheckAuth: () => dispatch( actions.checkSignedIn() )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );\n"]},"metadata":{},"sourceType":"module"}