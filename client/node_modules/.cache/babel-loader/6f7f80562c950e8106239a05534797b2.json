{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js\";\nimport React, { Component } from 'react';\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onCreateWorkoutHandler = form => {\n      this.setState({\n        validated: true\n      });\n      this.props.onCreateWorkout({\n        data: form,\n        token: this.props.token\n      }); // this.props.history.push( this.props.redirect );\n      // return <Redirect to={ this.props.redirect} />;\n    };\n  }\n\n  render() {\n    let form = formObjectToArray(this.state.form).map(ele => {\n      let formElements = null;\n\n      switch (ele.settings.type) {\n        case 'input':\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              className: \"my-1\",\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\" \", ele.settings.label, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: ele.settings.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: ele.settings.type,\n                id: ele.key,\n                placeholder: ele.settings.config.placeholder,\n                onChange: event => this.inputChangedHandler(event, ele.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 'select':\n          const optionsData = ele.settings.config.options;\n          const options = Object.keys(optionsData).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: [\" \", optionsData[key]]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this);\n          });\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: \"unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Choose...\",\n                id: ele.key,\n                onChange: event => this.inputChangedHandler(event, ele.key),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: [\" \", ele.settings.config.placeholder, \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this), options]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          console.log(ele.settings.type);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"align-items-center\",\n        children: formElements\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this);\n    });\n    const schema = yup.object({\n      name: yup.string().required(),\n      description: yup.string().required()\n    });\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: this.onCreateWorkoutHandler,\n      initialValues: {\n        name: '',\n        description: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: values.name,\n            onChange: handleChange,\n            isInvalid: !!errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"textarea\",\n            placeholder: \"Description\",\n            name: \"password\",\n            value: values.description,\n            onChange: handleChange,\n            isInvalid: !!errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: signinBtnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.Create,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.props.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), form, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: this.onCreateWorkout,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.signin.token,\n    view: state.workouts.view,\n    redirect: state.workouts.redirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateWorkout: data => dispatch(actions.createWorkout(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWorkout);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js"],"names":["React","Component","workoutForm","formInputChanged","formObjectToArray","tranformPascalCaseToUnderscoreCase","mapKeyToValue","Aux","Container","Col","Form","Button","connect","Redirect","Formik","yup","classes","actions","CreateWorkout","state","validated","inputChangedHandler","event","key","setState","form","onCreateWorkoutHandler","props","onCreateWorkout","data","token","render","map","ele","formElements","settings","type","label","config","placeholder","optionsData","options","Object","keys","console","log","schema","object","name","string","required","description","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","Buttons","signinBtnChild","Create","redirect","mapStateToProps","signin","view","workouts","mapDispatchToProps","dispatch","createWorkout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,iCAA9C;AACA,SAASC,iBAAT,EAA4BC,kCAA5B,EAAgEC,aAAhE,QAAqF,4BAArF;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA4C,iBAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;;AAEA,MAAMC,aAAN,SAA4BjB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCkB,KADkC,GAC1B;AACJC,MAAAA,SAAS,EAAE;AADP,KAD0B;;AAAA,SAKlCC,mBALkC,GAKZ,CAAEC,KAAF,EAASC,GAAT,KAAkB;AACpC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEtB,gBAAgB,CAAE,KAAKgB,KAAL,CAAWM,IAAb,EAAmBH,KAAnB,EAA0BC,GAA1B;AAAxB,OAAd;AACH,KAPiC;;AAAA,SASlCG,sBATkC,GASTD,IAAI,IAAI;AAC7B,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,WAAKO,KAAL,CAAWC,eAAX,CAA2B;AACvBC,QAAAA,IAAI,EAAEJ,IADiB;AAEvBK,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAFK,OAA3B,EAF6B,CAO7B;AACA;AACH,KAlBiC;AAAA;;AAoBnCC,EAAAA,MAAM,GAAI;AAET,QAAIN,IAAI,GAAGrB,iBAAiB,CAAE,KAAKe,KAAL,CAAWM,IAAb,CAAjB,CAAqCO,GAArC,CAA0CC,GAAG,IAAI;AACxD,UAAIC,YAAY,GAAG,IAAnB;;AAEA,cAASD,GAAG,CAACE,QAAJ,CAAaC,IAAtB;AACI,aAAK,OAAL;AACIF,UAAAA,YAAY,gBACR,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,MAAR;AAAe,cAAA,SAAS,EAAC,MAAzB;AAAA,qCACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAeD,GAAG,CAACE,QAAJ,CAAaE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,SAAS,EAAC,MAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,OAAO,EAAEJ,GAAG,CAACV,GAAzB;AAA8B,gBAAA,MAAM,MAApC;AAAA,0BACEU,GAAG,CAACE,QAAJ,CAAaE;AADf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD,CAAM,OAAN;AACI,gBAAA,IAAI,EAAGJ,GAAG,CAACE,QAAJ,CAAaC,IADxB;AAEI,gBAAA,EAAE,EAAEH,GAAG,CAACV,GAFZ;AAGI,gBAAA,WAAW,EAAGU,GAAG,CAACE,QAAJ,CAAaG,MAAb,CAAoBC,WAHtC;AAII,gBAAA,QAAQ,EAAGjB,KAAK,IAAI,KAAKD,mBAAL,CAA0BC,KAA1B,EAAiCW,GAAG,CAACV,GAArC;AAJxB;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiBA;;AACJ,aAAK,QAAL;AACI,gBAAMiB,WAAW,GAAGP,GAAG,CAACE,QAAJ,CAAaG,MAAb,CAAoBG,OAAxC;AACA,gBAAMA,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAaH,WAAb,EAA2BR,GAA3B,CAAgCT,GAAG,IAAI;AACnD,gCACI;AAAQ,cAAA,KAAK,EAAGA,GAAhB;AAAA,8BAAmCiB,WAAW,CAACjB,GAAD,CAA9C;AAAA,eAA2BA,GAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJe,CAAhB;AAKAW,UAAAA,YAAY,gBACR,QAAC,GAAD;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,SAAS,EAAC,MAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,OAAO,EAAED,GAAG,CAACV,GAAzB;AAA8B,gBAAA,MAAM,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD,CAAM,OAAN;AACI,gBAAA,EAAE,EAAC,QADP;AAEI,gBAAA,YAAY,EAAC,WAFjB;AAGI,gBAAA,EAAE,EAAGU,GAAG,CAACV,GAHb;AAII,gBAAA,QAAQ,EAAGD,KAAK,IAAI,KAAKD,mBAAL,CAA0BC,KAA1B,EAAiCW,GAAG,CAACV,GAArC,CAJxB;AAAA,wCAKI;AAAA,kCAAWU,GAAG,CAACE,QAAJ,CAAaG,MAAb,CAAoBC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,EAMME,OANN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiBA;;AACJ;AACIG,UAAAA,OAAO,CAACC,GAAR,CAAaZ,GAAG,CAACE,QAAJ,CAAaC,IAA1B;AA9CR;;AAiDA,0BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,SAAS,EAAC,oBAApB;AAAA,kBACMF;AADN,SAA+CD,GAAG,CAACV,GAAnD;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAzDU,CAAX;AA2DA,UAAMuB,MAAM,GAAG/B,GAAG,CAACgC,MAAJ,CAAW;AACtBC,MAAAA,IAAI,EAAEjC,GAAG,CAACkC,MAAJ,GAAaC,QAAb,EADgB;AAEtBC,MAAAA,WAAW,EAAEpC,GAAG,CAACkC,MAAJ,GAAaC,QAAb;AAFS,KAAX,CAAf;AAKA,wBACA,QAAC,MAAD;AACI,MAAA,gBAAgB,EAAEJ,MADtB;AAEI,MAAA,QAAQ,EAAE,KAAKpB,sBAFnB;AAGI,MAAA,aAAa,EAAE;AACXsB,QAAAA,IAAI,EAAE,EADK;AAEXG,QAAAA,WAAW,EAAE;AAFF,OAHnB;AAAA,gBAQC,CAAC;AACEC,QAAAA,YADF;AAEEC,QAAAA,YAFF;AAGEC,QAAAA,UAHF;AAIEC,QAAAA,MAJF;AAKEC,QAAAA,OALF;AAMEC,QAAAA,OANF;AAOEC,QAAAA;AAPF,OAAD,kBASD,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEN,YAA3B;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE3C,GAAhB;AAAqB,UAAA,SAAS,EAAC,MAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAE8C,MAAM,CAACP,IAJhB;AAKE,YAAA,QAAQ,EAAEK,YALZ;AAME,YAAA,SAAS,EAAE,CAAC,CAACK,MAAM,CAACV;AANtB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,YAAA,IAAI,EAAC,SAA5B;AAAA,sBACGU,MAAM,CAACV;AADV;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEvC,GAAhB;AAAqB,UAAA,SAAS,EAAC,aAA/B;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,WAAW,EAAC,aAFhB;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,KAAK,EAAE8C,MAAM,CAACJ,WAJlB;AAKI,YAAA,QAAQ,EAAEE,YALd;AAMI,YAAA,SAAS,EAAE,CAAC,CAACK,MAAM,CAACP;AANxB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAUM,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,YAAA,IAAI,EAAC,SAA5B;AAAA,sBACGO,MAAM,CAACP;AADV;AAAA;AAAA;AAAA;AAAA,kBAVN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA6BI;AAAK,UAAA,SAAS,EAAEnC,OAAO,CAAC2C,OAAxB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,IAAI,EAAC,QAA9B;AAAA,sBAAyCC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA,YADA;AAuDA,wBACA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE5C,OAAO,CAAC6C,MAA9B;AAAA,6BACI,QAAC,IAAD;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE,KAAKlC,KAAL,CAAWmC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEMrC,IAFN,eAGI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAE,KAAKG,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA;AAWA;;AAxJkC;;AA2JtC,MAAMmC,eAAe,GAAG5C,KAAK,IAAI;AAC7B,SAAO;AACHW,IAAAA,KAAK,EAAEX,KAAK,CAAC6C,MAAN,CAAalC,KADjB;AAEHmC,IAAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAAN,CAAeD,IAFlB;AAGHH,IAAAA,QAAQ,EAAE3C,KAAK,CAAC+C,QAAN,CAAeJ;AAHtB,GAAP;AAKH,CAND;;AAQA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxC,IAAAA,eAAe,EAAEC,IAAI,IAAIuC,QAAQ,CAAEnD,OAAO,CAACoD,aAAR,CAAuBxC,IAAvB,CAAF;AAD9B,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAAEmD,eAAF,EAAmBI,kBAAnB,CAAP,CAAiDjD,aAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { Container, Col, Form, Button} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n    state = {\n        validated: false\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key ) });\n    }\n\n    onCreateWorkoutHandler = form => {\n        this.setState({ validated: true });\n        this.props.onCreateWorkout({\n            data: form,\n            token: this.props.token\n        });\n\n        // this.props.history.push( this.props.redirect );\n        // return <Redirect to={ this.props.redirect} />;\n    }\n\n   render () {\n\n    let form = formObjectToArray( this.state.form ).map( ele => {\n        let formElements = null;\n\n        switch ( ele.settings.type ) {\n            case 'input' :\n                formElements = (\n                    <Aux>\n                        <Col xs=\"auto\" className=\"my-1\">\n                            <Form.Label> { ele.settings.label } </Form.Label>\n                        </Col>\n                        <Col sm={6} className=\"my-1\">\n                            <Form.Label htmlFor={ele.key} srOnly>\n                            { ele.settings.label }\n                            </Form.Label>\n                            <Form.Control\n                                type={ ele.settings.type }\n                                id={ele.key}\n                                placeholder={ ele.settings.config.placeholder }\n                                onChange={ event => this.inputChangedHandler( event, ele.key ) }/>\n                        </Col>\n                    </Aux>\n                );\n                break;\n            case 'select' :\n                const optionsData = ele.settings.config.options;\n                const options = Object.keys( optionsData ).map( key => {\n                    return (\n                        <option value={ key } key={key}> { optionsData[key] }</option>\n                    )\n                });\n                formElements = (\n                    <Aux>\n                        <Col sm={4} className=\"my-1\">\n                            <Form.Label htmlFor={ele.key} srOnly>\n                                unit\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                defaultValue=\"Choose...\"\n                                id={ ele.key }\n                                onChange={ event => this.inputChangedHandler( event, ele.key )} >\n                                <option> { ele.settings.config.placeholder }...</option>\n                                { options }\n                            </Form.Control>\n                        </Col>\n                    </Aux>\n                );\n                break;\n            default:\n                console.log( ele.settings.type );\n        }\n\n        return (\n            <Form.Row className=\"align-items-center\" key={ ele.key }>\n                { formElements }\n            </Form.Row>\n        );\n    });\n\n    const schema = yup.object({\n        name: yup.string().required(),\n        description: yup.string().required(),\n    });\n\n    return (\n    <Formik\n        validationSchema={schema}\n        onSubmit={this.onCreateWorkoutHandler}\n        initialValues={{\n            name: '',\n            description: ''\n        }}\n    >\n    {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n    }) => (\n    <Form noValidate onSubmit={handleSubmit}>\n        <Form.Group as={Col} controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleChange}\n            isInvalid={!!errors.name}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.name}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"description\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n                type=\"textarea\"\n                placeholder=\"Description\"\n                name=\"password\"\n                value={values.description}\n                onChange={handleChange}\n                isInvalid={!!errors.description}\n            />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n        </Form.Group>\n        <div className={classes.Buttons}>\n            <Button variant='danger' type=\"submit\">{ signinBtnChild }</Button>\n            {/* <Button variant='secondary' disabled={this.props.loading}>Cancel</Button> */}\n        </div>\n    </Form>\n  )}\n</Formik>);\n\n    return (\n    <Container className={classes.Create}>\n        <Form>\n            <Redirect to={this.props.redirect} />\n            { form }\n            <Button variant='danger' onClick={this.onCreateWorkout}>\n                Submit\n            </Button>\n        </Form>\n    </Container>\n    );\n   }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.signin.token,\n        view: state.workouts.view,\n        redirect: state.workouts.redirect\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateWorkout: data => dispatch( actions.createWorkout( data ))\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps ) ( CreateWorkout );\n"]},"metadata":{},"sourceType":"module"}