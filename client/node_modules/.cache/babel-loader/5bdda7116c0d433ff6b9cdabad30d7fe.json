{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport classes from './Signin.module.css';\nimport { signinForm, formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signinForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = event => {\n      event.preventDefault();\n      this.props.onSignin(mapKeyToValue(this.state.form));\n    };\n  }\n\n  componentDidMount() {\n    // this.props.isAuth ? this.props.history.push(this.props.redirect) : null;\n    if (this.props.isAuth) {\n      this.props.history.push(this.props.redirect);\n    }\n  }\n\n  render() {\n    const error = this.props.errors && this.props.errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.props.errors.map(err => {\n          console.log(err);\n\n          /*#__PURE__*/\n          _jsxDEV(ListGroup.Item, {\n            children: err.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this) : null;\n    let form = formObjectToArray(this.state.form).map(ele => {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: ele.settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: ele.settings.config.type,\n          placeholder: ele.settings.config.placeholder,\n          onChange: event => this.inputChangedHandler(event, ele.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    });\n    let redirect = this.props.isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 44\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Signin,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.Form,\n        children: [redirect, form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.onSigninHandler,\n            children: \"Signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null,\n    redirect: state.signin.redirect,\n    errors: state.signin.errors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","Redirect","Button","Form","Alert","ListGroup","classes","signinForm","formInputChanged","formObjectToArray","mapKeyToValue","actions","Signin","state","form","inputChangedHandler","event","key","setState","onSigninHandler","preventDefault","props","onSignin","componentDidMount","isAuth","history","push","redirect","render","error","errors","length","map","err","console","log","message","ele","settings","label","config","type","placeholder","Buttons","mapStateToProps","signin","token","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport classes from './Signin.module.css';\n\nimport { signinForm, formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n    state = {\n        form: signinForm\n    }\n\n    componentDidMount () {\n        // this.props.isAuth ? this.props.history.push(this.props.redirect) : null;\n        if ( this.props.isAuth ) {\n            this.props.history.push(this.props.redirect);\n        }\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSigninHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onSignin( mapKeyToValue( this.state.form ));\n    }\n\n    render () {\n        const error = this.props.errors && this.props.errors.length > 0 ? (\n            <Alert variant='danger'>\n                <ListGroup>\n                {\n                    this.props.errors.map( err => {\n                        console.log(err);\n                        <ListGroup.Item>{ err.message }</ListGroup.Item>\n\n                    })\n                }\n                </ListGroup>\n            </Alert>\n        ): null;\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            return (\n                <Form.Group controlId={ele.key} key={ele.key}>\n                    <Form.Label>{ ele.settings.label }</Form.Label>\n                    <Form.Control\n                        type={ ele.settings.config.type } \n                        placeholder={ ele.settings.config.placeholder} \n                        onChange={ event => this.inputChangedHandler( event, ele.key)}/>\n                </Form.Group>\n            );\n\n        });\n\n        let redirect = this.props.isAuth ? <Redirect to={this.props.redirect} /> : null;\n\n        return (\n            <div className={classes.Signin}>\n                <Form className={classes.Form}>          \n                    {redirect}\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button variant='danger' onClick={this.onSigninHandler}>Signin</Button>\n                        <Button variant='secondary'>Cancel</Button>\n                    </div>\n                </Form>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null,\n        redirect: state.signin.redirect,\n        errors: state.signin.errors\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );"]},"metadata":{},"sourceType":"module"}