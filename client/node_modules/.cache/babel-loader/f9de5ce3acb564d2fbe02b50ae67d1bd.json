{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport classes from './Signin.module.css';\nimport { signinForm, formInputChanged } from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Input from '../../UI/Input/Input';\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: signinForm\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onSigninHandler = event => {\n      event.preventDefault();\n      this.props.onSignin(mapKeyToValue(this.state.form));\n    };\n  }\n\n  componentDidMount() {\n    // this.props.isAuth ? this.props.history.push(this.props.redirect) : null;\n    if (this.props.isAuth) {\n      this.props.history.push(this.props.redirect);\n    }\n  }\n\n  render() {\n    let form = formObjectToArray(this.state.form).map(ele => {\n      // return <Input\n      //     key={ele.key}\n      //     type={ele.settings.type}\n      //     config={ele.settings.config}\n      //     value={ele.settings.value}\n      //     label={ele.settings.label}\n      //     changed={ event => this.inputChangedHandler( event, ele.key)}\n      //     />\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: ele.key,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: ele.settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: ele.settings.type,\n          placeholder: ele.settings.config.placeholder,\n          onChange: event => this.inputChangedHandler(event, ele.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, ele.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    });\n    let redirect = this.props.isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 44\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [redirect, form, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            clicked: this.onSigninHandler,\n            children: \"Signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.signin.token !== null,\n    redirect: state.signin.redirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSignin: data => dispatch(actions.signin(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/Auth/Signin/Signin.js"],"names":["connect","React","Component","Redirect","withRouter","Button","Form","classes","signinForm","formInputChanged","formObjectToArray","mapKeyToValue","Input","actions","Signin","state","form","inputChangedHandler","event","key","setState","onSigninHandler","preventDefault","props","onSignin","componentDidMount","isAuth","history","push","redirect","render","map","ele","settings","label","type","config","placeholder","Buttons","mapStateToProps","signin","token","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport classes from './Signin.module.css';\n\nimport { signinForm, formInputChanged} from '../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue } from '../../../shared/utility';\nimport Input from '../../UI/Input/Input';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Signin extends Component {\n    state = {\n        form: signinForm\n    }\n\n    componentDidMount () {\n        // this.props.isAuth ? this.props.history.push(this.props.redirect) : null;\n        if ( this.props.isAuth ) {\n            this.props.history.push(this.props.redirect);\n        }\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key) });\n    }\n\n    onSigninHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onSignin( mapKeyToValue( this.state.form ));\n    }\n\n    render () {\n        let form = formObjectToArray( this.state.form ).map( ele => {\n            // return <Input\n            //     key={ele.key}\n            //     type={ele.settings.type}\n            //     config={ele.settings.config}\n            //     value={ele.settings.value}\n            //     label={ele.settings.label}\n            //     changed={ event => this.inputChangedHandler( event, ele.key)}\n            //     />\n            return (\n                <Form.Group controlId={ele.key} key={ele.key}>\n                    <Form.Label>{ ele.settings.label }</Form.Label>\n                    <Form.Control\n                        type={ ele.settings.type } \n                        placeholder={ ele.settings.config.placeholder} \n                        onChange={ event => this.inputChangedHandler( event, ele.key)}/>\n                </Form.Group>\n            );\n\n        });\n\n        let redirect = this.props.isAuth ? <Redirect to={this.props.redirect} /> : null;\n\n        return (\n            <div>\n                <Form>          \n                    {redirect}\n                    {form}\n                    <div className={classes.Buttons}>\n                        <Button variant='danger' clicked={this.onSigninHandler}>Signin</Button>\n                        <Button variant='secondary'>Cancel</Button>\n                    </div>\n                </Form>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.signin.token !== null,\n        redirect: state.signin.redirect\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignin : data => dispatch( actions.signin ( data ) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps) ( Signin );"]},"metadata":{},"sourceType":"module"}