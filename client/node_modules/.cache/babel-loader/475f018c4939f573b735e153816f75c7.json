{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js\";\nimport React, { Component } from 'react';\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: workoutForm,\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onCreateWorkout = () => {\n      const form = event.currentTarget;\n      const jes = tranformPascalCaseToUnderscoreCase(mapKeyToValue(this.state.form));\n      console.log(jes);\n      console.log(eve);\n      this.props.onCreateWorkout({\n        data: tranformPascalCaseToUnderscoreCase(mapKeyToValue(this.state.form)),\n        token: this.props.token\n      });\n    };\n  }\n\n  render() {\n    let form = formObjectToArray(this.state.form).map(ele => {\n      let formElements = null;\n\n      switch (ele.settings.type) {\n        case 'input':\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              className: \"my-1\",\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\" \", ele.settings.label, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: ele.settings.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: ele.settings.type,\n                id: ele.key,\n                placeholder: ele.settings.config.placeholder,\n                onChange: event => this.inputChangedHandler(event, ele.key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this);\n          break;\n\n        case 'select':\n          const optionsData = ele.settings.config.options;\n          const options = Object.keys(optionsData).map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: [\" \", optionsData[key]]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this);\n          });\n          formElements = /*#__PURE__*/_jsxDEV(Aux, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 4,\n              className: \"my-1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: ele.key,\n                srOnly: true,\n                children: \"unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                defaultValue: \"Choose...\",\n                id: ele.key,\n                onChange: event => this.inputChangedHandler(event, ele.key),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: [\" \", ele.settings.config.placeholder, \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this), options]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this);\n          break;\n\n        default:\n          console.log(ele.settings.type);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"align-items-center\",\n        children: formElements\n      }, ele.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.Create,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.props.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), form, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: this.onCreateWorkout,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.signin.token,\n    view: state.workouts.view,\n    redirect: state.workouts.redirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateWorkout: data => dispatch(actions.createWorkout(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWorkout);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/Create/Create.js"],"names":["React","Component","workoutForm","formInputChanged","formObjectToArray","tranformPascalCaseToUnderscoreCase","mapKeyToValue","Aux","Container","Col","Form","Button","connect","Redirect","classes","actions","CreateWorkout","state","form","validated","inputChangedHandler","event","key","setState","onCreateWorkout","currentTarget","jes","console","log","eve","props","data","token","render","map","ele","formElements","settings","type","label","config","placeholder","optionsData","options","Object","keys","Create","redirect","mapStateToProps","signin","view","workouts","mapDispatchToProps","dispatch","createWorkout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { workoutForm, formInputChanged } from '../../../../shared/form-utility';\nimport { formObjectToArray, tranformPascalCaseToUnderscoreCase, mapKeyToValue } from '../../../../shared/utility';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport classes from './Create.module.css';\nimport * as actions from '../../../../store/actions/index';\n\nclass CreateWorkout extends Component {\n    state = {\n        form: workoutForm,\n        validated: false\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key ) });\n    }\n\n    onCreateWorkout = () => {\n        const form = event.currentTarget;\n        const jes = tranformPascalCaseToUnderscoreCase( mapKeyToValue( this.state.form ) )\n        console.log(jes);\n        console.log(eve)\n        this.props.onCreateWorkout({\n            data: tranformPascalCaseToUnderscoreCase( mapKeyToValue( this.state.form ) ),\n            token: this.props.token \n        })\n    }\n\n   render () {\n    \n    let form = formObjectToArray( this.state.form ).map( ele => {\n        let formElements = null;\n\n        switch ( ele.settings.type ) {\n            case 'input' :\n                formElements = (\n                    <Aux>\n                        <Col xs=\"auto\" className=\"my-1\">\n                            <Form.Label> { ele.settings.label } </Form.Label>\n                        </Col>\n                        <Col sm={6} className=\"my-1\">\n                            <Form.Label htmlFor={ele.key} srOnly>\n                            { ele.settings.label }\n                            </Form.Label>\n                            <Form.Control \n                                type={ ele.settings.type }\n                                id={ele.key}\n                                placeholder={ ele.settings.config.placeholder }\n                                onChange={ event => this.inputChangedHandler( event, ele.key ) }/>\n                        </Col>\n                    </Aux>\n                );\n                break;\n            case 'select' :\n                const optionsData = ele.settings.config.options;\n                const options = Object.keys( optionsData ).map( key => {\n                    return (\n                        <option value={ key } key={key}> { optionsData[key] }</option>\n                    )\n                });\n                formElements = (\n                    <Aux>\n                        <Col sm={4} className=\"my-1\">\n                            <Form.Label htmlFor={ele.key} srOnly>\n                                unit\n                            </Form.Label>\n                            <Form.Control \n                                as=\"select\" \n                                defaultValue=\"Choose...\" \n                                id={ ele.key }\n                                onChange={ event => this.inputChangedHandler( event, ele.key )} >\n                                <option> { ele.settings.config.placeholder }...</option>\n                                { options }\n                            </Form.Control>\n                        </Col>\n                    </Aux>\n                );\n                break;\n            default:\n                console.log( ele.settings.type );\n        }\n\n        return (\n            <Form.Row className=\"align-items-center\" key={ ele.key }>\n                { formElements }                 \n            </Form.Row>\n        );\n    });\n\n    return (\n    <Container className={classes.Create}>\n        <Form>\n            <Redirect to={this.props.redirect} />\n            { form }\n            <Button variant='danger' onClick={this.onCreateWorkout}>\n                Submit\n            </Button>\n        </Form>\n    </Container>\n    );\n   }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.signin.token,\n        view: state.workouts.view,\n        redirect: state.workouts.redirect\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateWorkout: data => dispatch( actions.createWorkout( data ))\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps ) ( CreateWorkout );"]},"metadata":{},"sourceType":"module"}