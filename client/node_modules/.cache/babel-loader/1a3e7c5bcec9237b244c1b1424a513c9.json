{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/Create/Create.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Form, Spinner, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport classes from './Create.module.css';\nimport * as actions from '../../../../../../store/actions/index';\nimport { workoutSessionForm, formInputChanged } from '../../../../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue, tranformPascalCaseToUnderscoreCase } from '../../../../../../shared/utility';\nimport Aux from '../../../../../../hoc/Aux/Aux';\n\nclass WorkoutSessionCreate extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      validated: false\n    };\n\n    this.inputChangedHandler = (event, key) => {\n      this.setState({\n        form: formInputChanged(this.state.form, event, key)\n      });\n    };\n\n    this.onCreateWorkoutSessionHandler = form => {\n      this.setState({\n        validated: true\n      });\n      this.props.onCreateWorkoutSession({\n        data: form,\n        id: this.props.match.params.id,\n        token: this.props.token\n      });\n    };\n\n    this.onCancelCreateWorkoutSessionHandler = () => {\n      this.props.onCancelCreateWorkoutSession(this.props.view);\n    };\n  }\n\n  render() {\n    const btnChild = this.props.loading ? /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this) : 'submit';\n    const schema = yup.object({\n      weight: yup.number().required('Weight is required.'),\n      weight_unit: yup.string().required('Unit for weight is required.'),\n      waist: yup.number().required('Waist is required.'),\n      waist_unit: yup.string().required('Unit for waist is required.')\n    });\n\n    if (this.props.shouldRedirect) {\n      console.log(this.props);\n    }\n\n    const form = this.props.shouldRedirect && this.props.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: this.props.redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 74\n    }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: this.onCreateWorkoutSessionHandler,\n      onReset: this.onCancelCreateWorkoutSessionHandler,\n      initialValues: {\n        weight: '',\n        weight_unit: '',\n        waist: '',\n        waist_unit: ''\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n        handleReset\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        onReset: handleReset,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          controlId: \"weight\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            sm: 10,\n            controlId: \"weight\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Weight\",\n              name: \"weight\",\n              value: values.weight,\n              onChange: handleChange,\n              isInvalid: !!errors.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            sm: 2,\n            controlId: \"weight_unit\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: handleChange,\n              isInvalid: !!errors.weight_unit,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                selected: true,\n                children: \"select unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lbs\",\n                children: \"lbs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"kg\",\n                children: \"kg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.weight_unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          controlId: \"waist\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            sm: 10,\n            controlId: \"waist\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Waist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Waist\",\n              name: \"waist\",\n              value: values.waist,\n              onChange: handleChange,\n              isInvalid: !!errors.waist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.waist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            sm: 2,\n            controlId: \"waist_unit\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: handleChange,\n              isInvalid: !!errors.waist_unit,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"inch\",\n                children: \"inch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cm\",\n                children: \"cm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.waist_unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            type: \"submit\",\n            children: btnChild\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"reset\",\n            disabled: this.props.loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: classes.Create,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        sm: true,\n        children: form\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    token: state.signin.token,\n    redirect: state.workouts.redirect,\n    loading: state.workouts.loading,\n    view: state.workouts.view,\n    shouldRedirect: state.workouts.shouldRedirect\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateWorkoutSession: data => dispatch(actions.createWorkoutSession(data)),\n    onCancelCreateWorkoutSession: data => dispatch(actions.cancelCreateWorkoutSession(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkoutSessionCreate);","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/pages/Workouts/View/Sessions/Create/Create.js"],"names":["React","Component","Container","Row","Col","Form","Spinner","Button","connect","Redirect","Formik","yup","classes","actions","workoutSessionForm","formInputChanged","formObjectToArray","mapKeyToValue","tranformPascalCaseToUnderscoreCase","Aux","WorkoutSessionCreate","state","validated","inputChangedHandler","event","key","setState","form","onCreateWorkoutSessionHandler","props","onCreateWorkoutSession","data","id","match","params","token","onCancelCreateWorkoutSessionHandler","onCancelCreateWorkoutSession","view","render","btnChild","loading","schema","object","weight","number","required","weight_unit","string","waist","waist_unit","shouldRedirect","console","log","redirect","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","handleReset","Buttons","Create","mapStateToProps","signin","workouts","mapDispatchToProps","dispatch","createWorkoutSession","cancelCreateWorkoutSession"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Form, Spinner, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport classes from './Create.module.css';\nimport * as actions from '../../../../../../store/actions/index';\n\nimport { workoutSessionForm, formInputChanged } from '../../../../../../shared/form-utility';\nimport { formObjectToArray, mapKeyToValue, tranformPascalCaseToUnderscoreCase } from '../../../../../../shared/utility';\nimport Aux from '../../../../../../hoc/Aux/Aux';\n\nclass WorkoutSessionCreate extends Component {\n    state = {\n        validated: false,\n    }\n\n    inputChangedHandler = ( event, key ) => {\n        this.setState({ form: formInputChanged( this.state.form, event, key ) });\n    }\n\n    onCreateWorkoutSessionHandler = form => {\n        this.setState({ validated: true });\n        this.props.onCreateWorkoutSession({\n            data: form,\n            id: this.props.match.params.id,\n            token: this.props.token\n        });\n    }\n\n    onCancelCreateWorkoutSessionHandler = () => {\n        this.props.onCancelCreateWorkoutSession( this.props.view );\n    }\n\n    render () {\n\n        const btnChild = this.props.loading ? (\n           <Aux>\n               <Spinner\n               as=\"span\"\n               animation=\"grow\"\n               size=\"sm\"\n               role=\"status\"\n               aria-hidden=\"true\"\n               />\n               Loading...\n           </Aux>\n        ): 'submit';\n\n        const schema = yup.object({\n            weight: yup.number().required('Weight is required.'),\n            weight_unit: yup.string().required('Unit for weight is required.'),\n            waist: yup.number().required('Waist is required.'),\n            waist_unit: yup.string().required('Unit for waist is required.'),\n        });\n\n        if( this.props.shouldRedirect ) {\n            console.log(this.props);\n        }\n\n        const form = this.props.shouldRedirect && this.props.redirect ? (<Redirect to={this.props.redirect} />) : (\n\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.onCreateWorkoutSessionHandler}\n                    onReset={this.onCancelCreateWorkoutSessionHandler}\n                    initialValues={{\n                        weight: '',\n                        weight_unit: '',\n                        waist: '',\n                        waist_unit: ''\n                    }}\n                >\n                    {({\n                        handleSubmit,\n                        handleChange,\n                        handleBlur,\n                        values,\n                        touched,\n                        isValid,\n                        errors,\n                        handleReset,\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit} onReset={handleReset}>\n                            <Form.Group as={Row} controlId=\"weight\">\n                                <Form.Group as={Col} sm={10} controlId=\"weight\">\n                                    <Form.Label>Weight</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Weight\"\n                                        name=\"weight\"\n                                        value={values.weight}\n                                        onChange={handleChange}\n                                        isInvalid={!!errors.weight}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.weight}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} sm={2} controlId=\"weight_unit\">\n                                    <Form.Label></Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        onChange={handleChange}\n                                        isInvalid={!!errors.weight_unit}\n                                    >\n                                        <option value='' selected>select unit</option>\n                                        <option value='lbs'>lbs</option>\n                                        <option value='kg'>kg</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.weight_unit}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"waist\">\n                                <Form.Group as={Col} sm={10} controlId=\"waist\">\n                                    <Form.Label>Waist</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Waist\"\n                                        name=\"waist\"\n                                        value={values.waist}\n                                        onChange={handleChange}\n                                        isInvalid={!!errors.waist}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.waist}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} sm={2} controlId=\"waist_unit\">\n                                    <Form.Label></Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        onChange={handleChange}\n                                        isInvalid={!!errors.waist_unit}\n                                    >\n                                        <option value=''>...</option>\n                                        <option value='inch'>inch</option>\n                                        <option value='cm'>cm</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.waist_unit}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Group>\n                            <div className={classes.Buttons}>\n                                <Button variant='danger' type=\"submit\">{ btnChild }</Button>\n                                <Button variant='secondary' type=\"reset\" disabled={this.props.loading}>Cancel</Button>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            )\n        return (\n            <Container fluid className={classes.Create}>\n                <Row className='justify-content-center' sm>\n                    { form }\n                </Row>\n            </Container>\n        );\n    }\n};\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        token: state.signin.token,\n        redirect: state.workouts.redirect,\n        loading: state.workouts.loading,\n        view: state.workouts.view,\n        shouldRedirect: state.workouts.shouldRedirect,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateWorkoutSession: data => dispatch( actions.createWorkoutSession( data )),\n        onCancelCreateWorkoutSession: data => dispatch( actions.cancelCreateWorkoutSession( data ) ),\n    };\n};\n\n\nexport default connect( mapStateToProps , mapDispatchToProps) ( WorkoutSessionCreate );\n"]},"metadata":{},"sourceType":"module"}