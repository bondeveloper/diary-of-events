{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/git/projects/diary-of-events/src/components/UI/Tooltip/Tooltip.js\";\nimport React from 'react';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst renderTooltip = props => {\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: props.info.id,\n    ...props,\n    children: props.info.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nconst CustomTooltip = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    placement: \"bottom\" // delay={{ show: 250, hide: 400 }}\n    // overlay={ () => renderTooltip ( props ) }\n    ,\n    overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: props.info.id,\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this),\n    children: ['top', 'right', 'bottom', 'left'].map(placement => /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      placement: placement,\n      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n        id: `tooltip-${placement}`,\n        children: [\"Tooltip on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: placement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        children: [\"Tooltip on \", placement]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, placement, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CustomTooltip;\nexport default CustomTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"sources":["/var/www/git/projects/diary-of-events/src/components/UI/Tooltip/Tooltip.js"],"names":["React","Tooltip","OverlayTrigger","Button","Image","FontAwesomeIcon","renderTooltip","props","info","id","title","CustomTooltip","console","log","map","placement"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAG;AAC1B,sBACA,QAAC,OAAD;AAAS,IAAA,EAAE,EAAEA,KAAK,CAACC,IAAN,CAAWC,EAAxB;AAAA,OAAgCF,KAAhC;AAAA,cACKA,KAAK,CAACC,IAAN,CAAWE;AADhB;AAAA;AAAA;AAAA;AAAA,UADA;AAID,CALH;;AAOA,MAAMC,aAAa,GAAGJ,KAAK,IAAI;AAC3BK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,sBAEI,QAAC,cAAD;AACI,IAAA,SAAS,EAAC,QADd,CAEI;AACA;AAHJ;AAII,IAAA,OAAO,eACH,QAAC,OAAD;AAAS,MAAA,EAAE,EAAEA,KAAK,CAACC,IAAN,CAAWC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAAA,cAaM,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmCK,GAAnC,CAAwCC,SAAD,iBACrC,QAAC,cAAD;AAEA,MAAA,SAAS,EAAEA,SAFX;AAGA,MAAA,OAAO,eACH,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,WAAUA,SAAU,EAAlC;AAAA,+CACW;AAAA,oBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,6BASA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA,kCAAwCA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AATA,OACKA,SADL;AAAA;AAAA;AAAA;AAAA,YADF;AAbN;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmDH,CArDD;;KAAMJ,a;AAwDN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst renderTooltip = props=> {\n    return (\n    <Tooltip id={props.info.id} {...props} >\n        {props.info.title}\n    </Tooltip>\n);}\n\nconst CustomTooltip = props => {\n    console.log(props);\n    return (\n\n        <OverlayTrigger\n            placement=\"bottom\"\n            // delay={{ show: 250, hide: 400 }}\n            // overlay={ () => renderTooltip ( props ) }\n            overlay={\n                <Tooltip id={props.info.id} >\n                    hello\n                </Tooltip>\n            }\n        >\n            {/* {({ ref, ...triggerHandler }) => (\n                props.element\n            )} */}\n             {['top', 'right', 'bottom', 'left'].map((placement) => (\n                <OverlayTrigger\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Tooltip id={`tooltip-${placement}`}>\n                    Tooltip on <strong>{placement}</strong>.\n                    </Tooltip>\n                }\n                >\n                <Button variant=\"secondary\">Tooltip on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n\n            {/* {({ ref, ...triggerHandler }) => (\n                \n                <Button\n                    variant=\"light\"\n                    {...triggerHandler}\n                    className=\"d-inline-flex align-items-center\"\n                >\n                    {/* <Image\n                    ref={ref}\n                    roundedCircle\n                    src=\"holder.js/20x20?text=J&bg=28a745&fg=FFF\"\n                    /> */}\n                     {/* <FontAwesomeIcon \n                        icon='plus-circle'\n                        ref={ref}\n                        onClick={ () => this.sessionCreateHandler(this.props.workout._id)}\n                     />\n                    <span className=\"ml-1\"                     ref={ref}>Hover to see</span>\n                </Button>\n            )} */}\n        </OverlayTrigger>\n    )\n}\n\n\nexport default CustomTooltip;"]},"metadata":{},"sourceType":"module"}